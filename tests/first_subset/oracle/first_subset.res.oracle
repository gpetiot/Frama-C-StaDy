[kernel] Parsing tests/first_subset/first_subset.c (with preprocessing)
[stady:generated-pl] generated Prolog precondition:
:- module(test_parameters).
:- import create_input_val/3 from substitution.
:- export dom/4.
:- export create_input_vals/2.
:- export unquantif_preconds/2.
:- export quantif_preconds/2.
:- export strategy/2.
:- export precondition_of/2.

dom(0,0,0,0).
dom('firstSubset', cont('s',_), [], int([-2147483648..2147483647])).
dom('pathcrawler__firstSubset_precond',A,B,C) :-
  dom('firstSubset',A,B,C).
create_input_vals('firstSubset', Ins):-
  create_input_val(dim('s'), int([0..4294967295]),Ins),
  create_input_val('n', int([-2147483648..2147483647]),Ins),
  true.
create_input_vals('pathcrawler__firstSubset_precond',Ins) :-
  create_input_vals('firstSubset',Ins).
quantif_preconds('firstSubset',
  [

  ]
).
quantif_preconds('pathcrawler__firstSubset_precond',A) :-
  quantif_preconds('firstSubset',A).
unquantif_preconds('firstSubset',
  [
    cond(egal,dim('s'),+(int(math), -(int(math), 'n', 1), 1),pre),
    cond(infegal,'n',3,pre),
    cond(supegal,'n',0,pre)
  ]
).
unquantif_preconds('pathcrawler__firstSubset_precond',A) :-
  unquantif_preconds('firstSubset',A).
strategy('firstSubset',[]).
strategy('pathcrawler__firstSubset_precond',A) :-
  strategy('firstSubset',A).
precondition_of('firstSubset','pathcrawler__firstSubset_precond').
[stady:generated-c] generated C file:
#include "/usr/local/share/frama-c/stady/externals.h"

int firstSubset_precond(int *s, int n) {
  return 1;
  
}
void firstSubset(int *s, int n)
{
  int *old_s;
  int *old_ptr_s;
  mpz_t __sd_Z_to_Z_3;
  unsigned long __sd_to_ctype_2;
  unsigned long __sd_iter_0;
  int old_n;
  old_s = s;
  __gmpz_init_set_si(__sd_Z_to_Z_3,n);
  __sd_to_ctype_2 = __gmpz_get_ui(__sd_Z_to_Z_3);
  old_ptr_s = (int *)malloc(__sd_to_ctype_2 * (unsigned long)sizeof(int));
  __sd_iter_0 = 0;
  while (__sd_iter_0 < __sd_to_ctype_2) {
    *(old_ptr_s + __sd_iter_0) = *(s + __sd_iter_0);
    __sd_iter_0 ++;
  }
  old_n = n;
  __gmpz_clear(__sd_Z_to_Z_3);
  {
    int k;
    k = 0;
    {
      mpz_t __sd_Z_cst_3;
      mpz_t __sd_Z_to_Z_4;
      int __sd_le_0;
      int __sd_and_0;
      int __sd_forall_1;
      __gmpz_init_set_str(__sd_Z_cst_3,"0",10);
      __gmpz_init_set_si(__sd_Z_to_Z_4,k);
      __sd_le_0 = __gmpz_cmp(__sd_Z_cst_3,__sd_Z_to_Z_4);
      __sd_and_0 = __sd_le_0 <= 0;
      if (__sd_and_0) __sd_and_0 = k <= n;
      if (! __sd_and_0) pathcrawler_assert_exception("not established",1);
      __sd_forall_1 = 1;
      {
        mpz_t __sd_Z_cst_5;
        mpz_t __sd_Z_to_Z_6;
        mpz_t __q_i;
        int __sd_forall_cmp_1;
        __gmpz_init_set_str(__sd_Z_cst_5,"0",10);
        __gmpz_init_set_si(__sd_Z_to_Z_6,k);
        __gmpz_init_set(__q_i,__sd_Z_cst_5);
        __sd_forall_cmp_1 = __gmpz_cmp(__q_i,__sd_Z_to_Z_6);
        while (__sd_forall_cmp_1 < 0 && __sd_forall_1) {
          mpz_t __sd_Z_lval_2;
          int __sd_to_ctype_3;
          mpz_t __sd_Z_to_Z_7;
          mpz_t __sd_Z_cst_6;
          int __sd_eq_2;
          int __sd_or_1;
          __gmpz_init_set(__sd_Z_lval_2,__q_i);
          __sd_to_ctype_3 = (int)__gmpz_get_si(__sd_Z_lval_2);
          __gmpz_init_set_si(__sd_Z_to_Z_7,*(s + __sd_to_ctype_3));
          __gmpz_init_set_str(__sd_Z_cst_6,"0",10);
          __sd_eq_2 = __gmpz_cmp(__sd_Z_to_Z_7,__sd_Z_cst_6);
          __sd_or_1 = __sd_eq_2 == 0;
          if (! __sd_or_1) {
            mpz_t __sd_Z_lval_3;
            int __sd_to_ctype_4;
            mpz_t __sd_Z_to_Z_8;
            mpz_t __sd_Z_cst_7;
            int __sd_eq_3;
            __gmpz_init_set(__sd_Z_lval_3,__q_i);
            __sd_to_ctype_4 = (int)__gmpz_get_si(__sd_Z_lval_3);
            __gmpz_init_set_si(__sd_Z_to_Z_8,*(s + __sd_to_ctype_4));
            __gmpz_init_set_str(__sd_Z_cst_7,"1",10);
            __sd_eq_3 = __gmpz_cmp(__sd_Z_to_Z_8,__sd_Z_cst_7);
            __sd_or_1 = __sd_eq_3 == 0;
            __gmpz_clear(__sd_Z_lval_3);
            __gmpz_clear(__sd_Z_to_Z_8);
            __gmpz_clear(__sd_Z_cst_7);
          }
          __sd_forall_1 = __sd_or_1;
          __gmpz_add_ui(__q_i,__q_i,1);
          __sd_forall_cmp_1 = __gmpz_cmp(__q_i,__sd_Z_to_Z_6);
          __gmpz_clear(__sd_Z_lval_2);
          __gmpz_clear(__sd_Z_to_Z_7);
          __gmpz_clear(__sd_Z_cst_6);
        }
        __gmpz_clear(__sd_Z_cst_5);
        __gmpz_clear(__sd_Z_to_Z_6);
        __gmpz_clear(__q_i);
      }
      if (! __sd_forall_1) pathcrawler_assert_exception("not established",6);
      __gmpz_clear(__sd_Z_cst_3);
      __gmpz_clear(__sd_Z_to_Z_4);
      
    }
    while (1) {
      
        if (! (k < n)) break;mpz_t __sd_Z_to_Z_12;
      mpz_t __sd_Z_to_Z_13;
      mpz_t __sd_Z_sub_0;
      int __sd_variant_pos_0;
      __gmpz_init_set_si(__sd_Z_to_Z_12,n);
      __gmpz_init_set_si(__sd_Z_to_Z_13,k);
      __gmpz_init(__sd_Z_sub_0);
      __gmpz_sub(__sd_Z_sub_0,__sd_Z_to_Z_12,__sd_Z_to_Z_13);
      __sd_variant_pos_0 = __gmpz_cmp_ui(__sd_Z_sub_0,0);
      if (__sd_variant_pos_0 < 0) pathcrawler_assert_exception("non positive",
                                                               4);
      {
        *(s + k) = 0;
        k ++;
      }mpz_t __sd_Z_cst_4;
      mpz_t __sd_Z_to_Z_5;
      int __sd_le_1;
      int __sd_and_1;
      int __sd_forall_2;
      mpz_t __sd_Z_to_Z_14;
      mpz_t __sd_Z_to_Z_15;
      mpz_t __sd_Z_sub_1;
      int __sd_variant_decr_0;
      __gmpz_init_set_str(__sd_Z_cst_4,"0",10);
      __gmpz_init_set_si(__sd_Z_to_Z_5,k);
      __sd_le_1 = __gmpz_cmp(__sd_Z_cst_4,__sd_Z_to_Z_5);
      __sd_and_1 = __sd_le_1 <= 0;
      if (__sd_and_1) __sd_and_1 = k <= n;
      if (! __sd_and_1) pathcrawler_assert_exception("not preserved",1);
      __sd_forall_2 = 1;
      {
        mpz_t __sd_Z_cst_8;
        mpz_t __sd_Z_to_Z_9;
        mpz_t __q_i;
        int __sd_forall_cmp_2;
        __gmpz_init_set_str(__sd_Z_cst_8,"0",10);
        __gmpz_init_set_si(__sd_Z_to_Z_9,k);
        __gmpz_init_set(__q_i,__sd_Z_cst_8);
        __sd_forall_cmp_2 = __gmpz_cmp(__q_i,__sd_Z_to_Z_9);
        while (__sd_forall_cmp_2 < 0 && __sd_forall_2) {
          mpz_t __sd_Z_lval_4;
          int __sd_to_ctype_5;
          mpz_t __sd_Z_to_Z_10;
          mpz_t __sd_Z_cst_9;
          int __sd_eq_4;
          int __sd_or_2;
          __gmpz_init_set(__sd_Z_lval_4,__q_i);
          __sd_to_ctype_5 = (int)__gmpz_get_si(__sd_Z_lval_4);
          __gmpz_init_set_si(__sd_Z_to_Z_10,*(s + __sd_to_ctype_5));
          __gmpz_init_set_str(__sd_Z_cst_9,"0",10);
          __sd_eq_4 = __gmpz_cmp(__sd_Z_to_Z_10,__sd_Z_cst_9);
          __sd_or_2 = __sd_eq_4 == 0;
          if (! __sd_or_2) {
            mpz_t __sd_Z_lval_5;
            int __sd_to_ctype_6;
            mpz_t __sd_Z_to_Z_11;
            mpz_t __sd_Z_cst_10;
            int __sd_eq_5;
            __gmpz_init_set(__sd_Z_lval_5,__q_i);
            __sd_to_ctype_6 = (int)__gmpz_get_si(__sd_Z_lval_5);
            __gmpz_init_set_si(__sd_Z_to_Z_11,*(s + __sd_to_ctype_6));
            __gmpz_init_set_str(__sd_Z_cst_10,"1",10);
            __sd_eq_5 = __gmpz_cmp(__sd_Z_to_Z_11,__sd_Z_cst_10);
            __sd_or_2 = __sd_eq_5 == 0;
            __gmpz_clear(__sd_Z_lval_5);
            __gmpz_clear(__sd_Z_to_Z_11);
            __gmpz_clear(__sd_Z_cst_10);
          }
          __sd_forall_2 = __sd_or_2;
          __gmpz_add_ui(__q_i,__q_i,1);
          __sd_forall_cmp_2 = __gmpz_cmp(__q_i,__sd_Z_to_Z_9);
          __gmpz_clear(__sd_Z_lval_4);
          __gmpz_clear(__sd_Z_to_Z_10);
          __gmpz_clear(__sd_Z_cst_9);
        }
        __gmpz_clear(__sd_Z_cst_8);
        __gmpz_clear(__sd_Z_to_Z_9);
        __gmpz_clear(__q_i);
      }
      if (! __sd_forall_2) pathcrawler_assert_exception("not preserved",6);
      __gmpz_init_set_si(__sd_Z_to_Z_14,n);
      __gmpz_init_set_si(__sd_Z_to_Z_15,k);
      __gmpz_init(__sd_Z_sub_1);
      __gmpz_sub(__sd_Z_sub_1,__sd_Z_to_Z_14,__sd_Z_to_Z_15);
      __sd_variant_decr_0 = __gmpz_cmp(__sd_Z_sub_1,__sd_Z_sub_0);
      if (__sd_variant_decr_0 >= 0) pathcrawler_assert_exception("non decreasing",
                                                                 4);
      __gmpz_clear(__sd_Z_cst_4);
      __gmpz_clear(__sd_Z_to_Z_5);
      __gmpz_clear(__sd_Z_to_Z_14);
      __gmpz_clear(__sd_Z_to_Z_15);
      __gmpz_clear(__sd_Z_sub_1);
      __gmpz_clear(__sd_Z_to_Z_12);
      __gmpz_clear(__sd_Z_to_Z_13);
      __gmpz_clear(__sd_Z_sub_0);
      
    }
    
    {
      int __sd_forall_0;
      __sd_forall_0 = 1;
      {
        mpz_t __sd_Z_cst_0;
        mpz_t __sd_Z_to_Z_0;
        mpz_t __q_i;
        int __sd_forall_cmp_0;
        __gmpz_init_set_str(__sd_Z_cst_0,"0",10);
        __gmpz_init_set_si(__sd_Z_to_Z_0,old_n);
        __gmpz_init_set(__q_i,__sd_Z_cst_0);
        __sd_forall_cmp_0 = __gmpz_cmp(__q_i,__sd_Z_to_Z_0);
        while (__sd_forall_cmp_0 < 0 && __sd_forall_0) {
          mpz_t __sd_Z_lval_0;
          int __sd_to_ctype_0;
          mpz_t __sd_Z_to_Z_1;
          mpz_t __sd_Z_cst_1;
          int __sd_eq_0;
          int __sd_or_0;
          __gmpz_init_set(__sd_Z_lval_0,__q_i);
          __sd_to_ctype_0 = (int)__gmpz_get_si(__sd_Z_lval_0);
          __gmpz_init_set_si(__sd_Z_to_Z_1,*(old_s + __sd_to_ctype_0));
          __gmpz_init_set_str(__sd_Z_cst_1,"0",10);
          __sd_eq_0 = __gmpz_cmp(__sd_Z_to_Z_1,__sd_Z_cst_1);
          __sd_or_0 = __sd_eq_0 == 0;
          if (! __sd_or_0) {
            mpz_t __sd_Z_lval_1;
            int __sd_to_ctype_1;
            mpz_t __sd_Z_to_Z_2;
            mpz_t __sd_Z_cst_2;
            int __sd_eq_1;
            __gmpz_init_set(__sd_Z_lval_1,__q_i);
            __sd_to_ctype_1 = (int)__gmpz_get_si(__sd_Z_lval_1);
            __gmpz_init_set_si(__sd_Z_to_Z_2,*(old_s + __sd_to_ctype_1));
            __gmpz_init_set_str(__sd_Z_cst_2,"1",10);
            __sd_eq_1 = __gmpz_cmp(__sd_Z_to_Z_2,__sd_Z_cst_2);
            __sd_or_0 = __sd_eq_1 == 0;
            __gmpz_clear(__sd_Z_lval_1);
            __gmpz_clear(__sd_Z_to_Z_2);
            __gmpz_clear(__sd_Z_cst_2);
          }
          __sd_forall_0 = __sd_or_0;
          __gmpz_add_ui(__q_i,__q_i,1);
          __sd_forall_cmp_0 = __gmpz_cmp(__q_i,__sd_Z_to_Z_0);
          __gmpz_clear(__sd_Z_lval_0);
          __gmpz_clear(__sd_Z_to_Z_1);
          __gmpz_clear(__sd_Z_cst_1);
        }
        __gmpz_clear(__sd_Z_cst_0);
        __gmpz_clear(__sd_Z_to_Z_0);
        __gmpz_clear(__q_i);
      }
      if (! __sd_forall_0) pathcrawler_assert_exception("",7);
    }
    free(old_ptr_s);
    return;
  }
}
[kernel] Parsing __sd_instru_first_subset_firstSubset.c (with preprocessing)
[kernel] Parsing __sd_instru_first_subset_firstSubset.c (with preprocessing)
[pc] Starting lanceur_firstSubset (isc version)
[pc] Starting lanceur_pathcrawler__firstSubset_precond (isc version)
[stady] all-paths: true
[stady] 159 test cases
[report] Computing properties status...

--------------------------------------------------------------------------------
--- Properties of Function 'firstSubset'
--------------------------------------------------------------------------------

[  Valid  ] Post-condition (file tests/first_subset/first_subset.c, line 11)
            by StaDy.
[  Valid  ] Loop variant at loop (file tests/first_subset/first_subset.c, line 18)
            by StaDy.
[  Valid  ] Invariant (file tests/first_subset/first_subset.c, line 14)
            by StaDy.
[  Valid  ] Invariant (file tests/first_subset/first_subset.c, line 15)
            by StaDy.
[    -    ] Default behavior
            tried with Frama-C kernel.

--------------------------------------------------------------------------------
--- Status Report Summary
--------------------------------------------------------------------------------
     4 Completely validated
     1 To be validated
     5 Total
--------------------------------------------------------------------------------
