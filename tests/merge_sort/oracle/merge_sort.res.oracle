[kernel] Parsing tests/merge_sort/merge_sort.c (with preprocessing)
tests/merge_sort/merge_sort.c:96:[stady] warning: \separated(table, ret) unsupported
[stady:generated-pl] generated Prolog precondition:
:- module(test_parameters).
:- import create_input_val/3 from substitution.
:- export dom/4.
:- export create_input_vals/2.
:- export unquantif_preconds/2.
:- export quantif_preconds/2.
:- export strategy/2.
:- export precondition_of/2.

dom(0,0,0,0).
dom('merge_sort', cont('table',_), [], int([-2147483648..2147483647])).
dom('merge_sort', cont('ret',_), [], int([-2147483648..2147483647])).
dom('pathcrawler__merge_sort_precond',A,B,C) :-
  dom('merge_sort',A,B,C).
create_input_vals('merge_sort', Ins):-
  create_input_val(dim('ret'), int([0..4294967295]),Ins),
  create_input_val('l', int([-2147483648..2147483647]),Ins),
  create_input_val(dim('table'), int([0..4294967295]),Ins),
  true.
create_input_vals('pathcrawler__merge_sort_precond',Ins) :-
  create_input_vals('merge_sort',Ins).
quantif_preconds('merge_sort',
  [

  ]
).
quantif_preconds('pathcrawler__merge_sort_precond',A) :-
  quantif_preconds('merge_sort',A).
unquantif_preconds('merge_sort',
  [
    cond(infegal,'l',3,pre),
    cond(infegal,1,'l',pre),
    cond(egal,dim('table'),+(int(math), -(int(math), 'l', 1), 1),pre),
    cond(egal,dim('ret'),+(int(math), -(int(math), 'l', 1), 1),pre)
  ]
).
unquantif_preconds('pathcrawler__merge_sort_precond',A) :-
  unquantif_preconds('merge_sort',A).
strategy('merge_sort',[]).
strategy('pathcrawler__merge_sort_precond',A) :-
  strategy('merge_sort',A).
precondition_of('merge_sort','pathcrawler__merge_sort_precond').
[stady:generated-c] generated C file:
#include "/usr/local/share/frama-c/stady/externals.h"

int merge_sort_precond(int *table, int l, int *ret) {
  return 1;
  
}
void BottomUpMerge(int *A, int iLeft, int iRight, int iEnd, int *B)
{
  mpz_t __sd_Z_to_Z_0;
  mpz_t __sd_Z_cst_0;
  mpz_t __sd_Z_sub_0;
  int __sd_to_ctype_0;
  int __sd_valid_0;
  mpz_t __sd_Z_to_Z_1;
  mpz_t __sd_Z_cst_1;
  mpz_t __sd_Z_sub_1;
  int __sd_to_ctype_1;
  int __sd_valid_1;
  int *old_A;
  int *old_ptr_A;
  mpz_t __sd_Z_to_Z_2;
  unsigned long __sd_to_ctype_2;
  unsigned long __sd_iter_0;
  int old_iLeft;
  int old_iRight;
  int old_iEnd;
  int *old_B;
  int *old_ptr_B;
  mpz_t __sd_Z_to_Z_3;
  unsigned long __sd_to_ctype_3;
  unsigned long __sd_iter_1;
  __gmpz_init_set_si(__sd_Z_to_Z_0,iRight);
  __gmpz_init_set_str(__sd_Z_cst_0,"1",10);
  __gmpz_init(__sd_Z_sub_0);
  __gmpz_sub(__sd_Z_sub_0,__sd_Z_to_Z_0,__sd_Z_cst_0);
  __sd_to_ctype_0 = (int)__gmpz_get_si(__sd_Z_sub_0);
  if (iLeft <= __sd_to_ctype_0) {
    int __sd_valid_dim_0;
    __sd_valid_dim_0 = pathcrawler_dimension(A);
    __sd_valid_0 = __sd_to_ctype_0 >= 0 && __sd_valid_dim_0 > __sd_to_ctype_0;
  }
  else __sd_valid_0 = 1;
  if (! __sd_valid_0) pathcrawler_assert_exception("",8);
  __gmpz_init_set_si(__sd_Z_to_Z_1,iEnd);
  __gmpz_init_set_str(__sd_Z_cst_1,"1",10);
  __gmpz_init(__sd_Z_sub_1);
  __gmpz_sub(__sd_Z_sub_1,__sd_Z_to_Z_1,__sd_Z_cst_1);
  __sd_to_ctype_1 = (int)__gmpz_get_si(__sd_Z_sub_1);
  if (iLeft <= __sd_to_ctype_1) {
    int __sd_valid_dim_1;
    __sd_valid_dim_1 = pathcrawler_dimension(B);
    __sd_valid_1 = __sd_to_ctype_1 >= 0 && __sd_valid_dim_1 > __sd_to_ctype_1;
  }
  else __sd_valid_1 = 1;
  if (! __sd_valid_1) pathcrawler_assert_exception("",26);
  old_A = A;
  __gmpz_init_set_si(__sd_Z_to_Z_2,iRight);
  __sd_to_ctype_2 = __gmpz_get_ui(__sd_Z_to_Z_2);
  old_ptr_A = (int *)malloc(__sd_to_ctype_2 * (unsigned long)sizeof(int));
  __sd_iter_0 = 0;
  while (__sd_iter_0 < __sd_to_ctype_2) {
    *(old_ptr_A + __sd_iter_0) = *(A + __sd_iter_0);
    __sd_iter_0 ++;
  }
  old_iLeft = iLeft;
  old_iRight = iRight;
  old_iEnd = iEnd;
  old_B = B;
  __gmpz_init_set_si(__sd_Z_to_Z_3,iEnd);
  __sd_to_ctype_3 = __gmpz_get_ui(__sd_Z_to_Z_3);
  old_ptr_B = (int *)malloc(__sd_to_ctype_3 * (unsigned long)sizeof(int));
  __sd_iter_1 = 0;
  while (__sd_iter_1 < __sd_to_ctype_3) {
    *(old_ptr_B + __sd_iter_1) = *(B + __sd_iter_1);
    __sd_iter_1 ++;
  }
  __gmpz_clear(__sd_Z_to_Z_0);
  __gmpz_clear(__sd_Z_cst_0);
  __gmpz_clear(__sd_Z_sub_0);
  __gmpz_clear(__sd_Z_to_Z_1);
  __gmpz_clear(__sd_Z_cst_1);
  __gmpz_clear(__sd_Z_sub_1);
  __gmpz_clear(__sd_Z_to_Z_2);
  __gmpz_clear(__sd_Z_to_Z_3);
  {
    int j;
    int i0 = iLeft;
    int i1 = iRight;
    j = iLeft;
    {
      int __sd_and_0;
      int __sd_and_2;
      int __sd_and_4;
      mpz_t __sd_Z_to_Z_4;
      mpz_t __sd_Z_to_Z_5;
      mpz_t __sd_Z_sub_2;
      mpz_t __sd_Z_to_Z_6;
      mpz_t __sd_Z_add_0;
      mpz_t __sd_Z_to_Z_7;
      mpz_t __sd_Z_sub_3;
      mpz_t __sd_Z_to_Z_8;
      mpz_t __sd_Z_to_Z_9;
      mpz_t __sd_Z_sub_4;
      int __sd_eq_0;
      __sd_and_0 = iLeft <= j;
      if (__sd_and_0) __sd_and_0 = j <= iEnd;
      if (! __sd_and_0) pathcrawler_assert_exception("not established",4);
      __sd_and_2 = iLeft <= i0;
      if (__sd_and_2) __sd_and_2 = i0 <= iRight;
      if (! __sd_and_2) pathcrawler_assert_exception("not established",25);
      __sd_and_4 = iRight <= i1;
      if (__sd_and_4) __sd_and_4 = i1 <= iEnd;
      if (! __sd_and_4) pathcrawler_assert_exception("not established",2);
      __gmpz_init_set_si(__sd_Z_to_Z_4,i0);
      __gmpz_init_set_si(__sd_Z_to_Z_5,iLeft);
      __gmpz_init(__sd_Z_sub_2);
      __gmpz_sub(__sd_Z_sub_2,__sd_Z_to_Z_4,__sd_Z_to_Z_5);
      __gmpz_init_set_si(__sd_Z_to_Z_6,i1);
      __gmpz_init(__sd_Z_add_0);
      __gmpz_add(__sd_Z_add_0,__sd_Z_sub_2,__sd_Z_to_Z_6);
      __gmpz_init_set_si(__sd_Z_to_Z_7,iRight);
      __gmpz_init(__sd_Z_sub_3);
      __gmpz_sub(__sd_Z_sub_3,__sd_Z_add_0,__sd_Z_to_Z_7);
      __gmpz_init_set_si(__sd_Z_to_Z_8,j);
      __gmpz_init_set_si(__sd_Z_to_Z_9,iLeft);
      __gmpz_init(__sd_Z_sub_4);
      __gmpz_sub(__sd_Z_sub_4,__sd_Z_to_Z_8,__sd_Z_to_Z_9);
      __sd_eq_0 = __gmpz_cmp(__sd_Z_sub_3,__sd_Z_sub_4);
      if (! (__sd_eq_0 == 0)) pathcrawler_assert_exception("not established",
                                                           19);
      __gmpz_clear(__sd_Z_to_Z_4);
      __gmpz_clear(__sd_Z_to_Z_5);
      __gmpz_clear(__sd_Z_sub_2);
      __gmpz_clear(__sd_Z_to_Z_6);
      __gmpz_clear(__sd_Z_add_0);
      __gmpz_clear(__sd_Z_to_Z_7);
      __gmpz_clear(__sd_Z_sub_3);
      __gmpz_clear(__sd_Z_to_Z_8);
      __gmpz_clear(__sd_Z_to_Z_9);
      __gmpz_clear(__sd_Z_sub_4);
      
    }
    while (1) {
      
        if (! (j < iEnd)) {
          break;
        }
        mpz_t __sd_Z_to_Z_16;
      mpz_t __sd_Z_to_Z_17;
      mpz_t __sd_Z_sub_8;
      int __sd_variant_pos_0;
      __gmpz_init_set_si(__sd_Z_to_Z_16,iEnd);
      __gmpz_init_set_si(__sd_Z_to_Z_17,j);
      __gmpz_init(__sd_Z_sub_8);
      __gmpz_sub(__sd_Z_sub_8,__sd_Z_to_Z_16,__sd_Z_to_Z_17);
      __sd_variant_pos_0 = __gmpz_cmp_ui(__sd_Z_sub_8,0);
      if (__sd_variant_pos_0 < 0) pathcrawler_assert_exception("non positive",
                                                               7);
      {
        if (i0 < iRight) {
          
            if (i1 >= iEnd) {
              goto _LOR;
            }
            else {
              
                if (*(A + i0) <= *(A + i1)) {
                  {
                    _LOR: *(B + j) = *(A + i0);
                          i0 ++;
                  }
                }
                else {
                  goto _LAND;
                }
                
            }
            
        }
        else {
          {
            _LAND: *(B + j) = *(A + i1);
                   i1 ++;
          }
        }
        
        j ++;
      }int __sd_and_1;
      int __sd_and_3;
      int __sd_and_5;
      mpz_t __sd_Z_to_Z_10;
      mpz_t __sd_Z_to_Z_11;
      mpz_t __sd_Z_sub_5;
      mpz_t __sd_Z_to_Z_12;
      mpz_t __sd_Z_add_1;
      mpz_t __sd_Z_to_Z_13;
      mpz_t __sd_Z_sub_6;
      mpz_t __sd_Z_to_Z_14;
      mpz_t __sd_Z_to_Z_15;
      mpz_t __sd_Z_sub_7;
      int __sd_eq_1;
      mpz_t __sd_Z_to_Z_18;
      mpz_t __sd_Z_to_Z_19;
      mpz_t __sd_Z_sub_9;
      int __sd_variant_decr_0;
      __sd_and_1 = iLeft <= j;
      if (__sd_and_1) __sd_and_1 = j <= iEnd;
      if (! __sd_and_1) pathcrawler_assert_exception("not preserved",4);
      __sd_and_3 = iLeft <= i0;
      if (__sd_and_3) __sd_and_3 = i0 <= iRight;
      if (! __sd_and_3) pathcrawler_assert_exception("not preserved",25);
      __sd_and_5 = iRight <= i1;
      if (__sd_and_5) __sd_and_5 = i1 <= iEnd;
      if (! __sd_and_5) pathcrawler_assert_exception("not preserved",2);
      __gmpz_init_set_si(__sd_Z_to_Z_10,i0);
      __gmpz_init_set_si(__sd_Z_to_Z_11,iLeft);
      __gmpz_init(__sd_Z_sub_5);
      __gmpz_sub(__sd_Z_sub_5,__sd_Z_to_Z_10,__sd_Z_to_Z_11);
      __gmpz_init_set_si(__sd_Z_to_Z_12,i1);
      __gmpz_init(__sd_Z_add_1);
      __gmpz_add(__sd_Z_add_1,__sd_Z_sub_5,__sd_Z_to_Z_12);
      __gmpz_init_set_si(__sd_Z_to_Z_13,iRight);
      __gmpz_init(__sd_Z_sub_6);
      __gmpz_sub(__sd_Z_sub_6,__sd_Z_add_1,__sd_Z_to_Z_13);
      __gmpz_init_set_si(__sd_Z_to_Z_14,j);
      __gmpz_init_set_si(__sd_Z_to_Z_15,iLeft);
      __gmpz_init(__sd_Z_sub_7);
      __gmpz_sub(__sd_Z_sub_7,__sd_Z_to_Z_14,__sd_Z_to_Z_15);
      __sd_eq_1 = __gmpz_cmp(__sd_Z_sub_6,__sd_Z_sub_7);
      if (! (__sd_eq_1 == 0)) pathcrawler_assert_exception("not preserved",
                                                           19);
      __gmpz_init_set_si(__sd_Z_to_Z_18,iEnd);
      __gmpz_init_set_si(__sd_Z_to_Z_19,j);
      __gmpz_init(__sd_Z_sub_9);
      __gmpz_sub(__sd_Z_sub_9,__sd_Z_to_Z_18,__sd_Z_to_Z_19);
      __sd_variant_decr_0 = __gmpz_cmp(__sd_Z_sub_9,__sd_Z_sub_8);
      if (__sd_variant_decr_0 >= 0) pathcrawler_assert_exception("non decreasing",
                                                                 7);
      __gmpz_clear(__sd_Z_to_Z_10);
      __gmpz_clear(__sd_Z_to_Z_11);
      __gmpz_clear(__sd_Z_sub_5);
      __gmpz_clear(__sd_Z_to_Z_12);
      __gmpz_clear(__sd_Z_add_1);
      __gmpz_clear(__sd_Z_to_Z_13);
      __gmpz_clear(__sd_Z_sub_6);
      __gmpz_clear(__sd_Z_to_Z_14);
      __gmpz_clear(__sd_Z_to_Z_15);
      __gmpz_clear(__sd_Z_sub_7);
      __gmpz_clear(__sd_Z_to_Z_18);
      __gmpz_clear(__sd_Z_to_Z_19);
      __gmpz_clear(__sd_Z_sub_9);
      __gmpz_clear(__sd_Z_to_Z_16);
      __gmpz_clear(__sd_Z_to_Z_17);
      __gmpz_clear(__sd_Z_sub_8);
      
    }
    
    free(old_ptr_A);
    free(old_ptr_B);
    return;
  }
}

void CopyArray(int *A, int *B, int n)
{
  mpz_t __sd_Z_cst_2;
  int __sd_to_ctype_4;
  mpz_t __sd_Z_to_Z_20;
  mpz_t __sd_Z_cst_3;
  mpz_t __sd_Z_sub_10;
  int __sd_to_ctype_5;
  int __sd_valid_2;
  mpz_t __sd_Z_cst_4;
  int __sd_to_ctype_6;
  mpz_t __sd_Z_to_Z_21;
  mpz_t __sd_Z_cst_5;
  mpz_t __sd_Z_sub_11;
  int __sd_to_ctype_7;
  int __sd_valid_3;
  int *old_A;
  int *old_ptr_A;
  mpz_t __sd_Z_to_Z_22;
  unsigned long __sd_to_ctype_8;
  unsigned long __sd_iter_2;
  int *old_B;
  int *old_ptr_B;
  mpz_t __sd_Z_to_Z_23;
  unsigned long __sd_to_ctype_9;
  unsigned long __sd_iter_3;
  int old_n;
  __gmpz_init_set_str(__sd_Z_cst_2,"0",10);
  __sd_to_ctype_4 = (int)__gmpz_get_si(__sd_Z_cst_2);
  __gmpz_init_set_si(__sd_Z_to_Z_20,n);
  __gmpz_init_set_str(__sd_Z_cst_3,"1",10);
  __gmpz_init(__sd_Z_sub_10);
  __gmpz_sub(__sd_Z_sub_10,__sd_Z_to_Z_20,__sd_Z_cst_3);
  __sd_to_ctype_5 = (int)__gmpz_get_si(__sd_Z_sub_10);
  if (__sd_to_ctype_4 <= __sd_to_ctype_5) {
    int __sd_valid_dim_2;
    __sd_valid_dim_2 = pathcrawler_dimension(A);
    __sd_valid_2 = __sd_to_ctype_5 >= 0 && __sd_valid_dim_2 > __sd_to_ctype_5;
  }
  else __sd_valid_2 = 1;
  if (! __sd_valid_2) pathcrawler_assert_exception("",15);
  __gmpz_init_set_str(__sd_Z_cst_4,"0",10);
  __sd_to_ctype_6 = (int)__gmpz_get_si(__sd_Z_cst_4);
  __gmpz_init_set_si(__sd_Z_to_Z_21,n);
  __gmpz_init_set_str(__sd_Z_cst_5,"1",10);
  __gmpz_init(__sd_Z_sub_11);
  __gmpz_sub(__sd_Z_sub_11,__sd_Z_to_Z_21,__sd_Z_cst_5);
  __sd_to_ctype_7 = (int)__gmpz_get_si(__sd_Z_sub_11);
  if (__sd_to_ctype_6 <= __sd_to_ctype_7) {
    int __sd_valid_dim_3;
    __sd_valid_dim_3 = pathcrawler_dimension(B);
    __sd_valid_3 = __sd_to_ctype_7 >= 0 && __sd_valid_dim_3 > __sd_to_ctype_7;
  }
  else __sd_valid_3 = 1;
  if (! __sd_valid_3) pathcrawler_assert_exception("",14);
  old_A = A;
  __gmpz_init_set_si(__sd_Z_to_Z_22,n);
  __sd_to_ctype_8 = __gmpz_get_ui(__sd_Z_to_Z_22);
  old_ptr_A = (int *)malloc(__sd_to_ctype_8 * (unsigned long)sizeof(int));
  __sd_iter_2 = 0;
  while (__sd_iter_2 < __sd_to_ctype_8) {
    *(old_ptr_A + __sd_iter_2) = *(A + __sd_iter_2);
    __sd_iter_2 ++;
  }
  old_B = B;
  __gmpz_init_set_si(__sd_Z_to_Z_23,n);
  __sd_to_ctype_9 = __gmpz_get_ui(__sd_Z_to_Z_23);
  old_ptr_B = (int *)malloc(__sd_to_ctype_9 * (unsigned long)sizeof(int));
  __sd_iter_3 = 0;
  while (__sd_iter_3 < __sd_to_ctype_9) {
    *(old_ptr_B + __sd_iter_3) = *(B + __sd_iter_3);
    __sd_iter_3 ++;
  }
  old_n = n;
  __gmpz_clear(__sd_Z_cst_2);
  __gmpz_clear(__sd_Z_to_Z_20);
  __gmpz_clear(__sd_Z_cst_3);
  __gmpz_clear(__sd_Z_sub_10);
  __gmpz_clear(__sd_Z_cst_4);
  __gmpz_clear(__sd_Z_to_Z_21);
  __gmpz_clear(__sd_Z_cst_5);
  __gmpz_clear(__sd_Z_sub_11);
  __gmpz_clear(__sd_Z_to_Z_22);
  __gmpz_clear(__sd_Z_to_Z_23);
  {
    int i;
    i = 0;
    {
      mpz_t __sd_Z_cst_6;
      mpz_t __sd_Z_to_Z_24;
      int __sd_le_0;
      int __sd_and_6;
      __gmpz_init_set_str(__sd_Z_cst_6,"0",10);
      __gmpz_init_set_si(__sd_Z_to_Z_24,i);
      __sd_le_0 = __gmpz_cmp(__sd_Z_cst_6,__sd_Z_to_Z_24);
      __sd_and_6 = __sd_le_0 <= 0;
      if (__sd_and_6) __sd_and_6 = i <= n;
      if (! __sd_and_6) pathcrawler_assert_exception("not established",16);
      __gmpz_clear(__sd_Z_cst_6);
      __gmpz_clear(__sd_Z_to_Z_24);
      
    }
    while (1) {
      
        if (! (i < n)) {
          break;
        }
        mpz_t __sd_Z_to_Z_26;
      mpz_t __sd_Z_to_Z_27;
      mpz_t __sd_Z_sub_12;
      int __sd_variant_pos_1;
      __gmpz_init_set_si(__sd_Z_to_Z_26,n);
      __gmpz_init_set_si(__sd_Z_to_Z_27,i);
      __gmpz_init(__sd_Z_sub_12);
      __gmpz_sub(__sd_Z_sub_12,__sd_Z_to_Z_26,__sd_Z_to_Z_27);
      __sd_variant_pos_1 = __gmpz_cmp_ui(__sd_Z_sub_12,0);
      if (__sd_variant_pos_1 < 0) pathcrawler_assert_exception("non positive",
                                                               11);
      {
        *(A + i) = *(B + i);
        i ++;
      }mpz_t __sd_Z_cst_7;
      mpz_t __sd_Z_to_Z_25;
      int __sd_le_1;
      int __sd_and_7;
      mpz_t __sd_Z_to_Z_28;
      mpz_t __sd_Z_to_Z_29;
      mpz_t __sd_Z_sub_13;
      int __sd_variant_decr_1;
      __gmpz_init_set_str(__sd_Z_cst_7,"0",10);
      __gmpz_init_set_si(__sd_Z_to_Z_25,i);
      __sd_le_1 = __gmpz_cmp(__sd_Z_cst_7,__sd_Z_to_Z_25);
      __sd_and_7 = __sd_le_1 <= 0;
      if (__sd_and_7) __sd_and_7 = i <= n;
      if (! __sd_and_7) pathcrawler_assert_exception("not preserved",16);
      __gmpz_init_set_si(__sd_Z_to_Z_28,n);
      __gmpz_init_set_si(__sd_Z_to_Z_29,i);
      __gmpz_init(__sd_Z_sub_13);
      __gmpz_sub(__sd_Z_sub_13,__sd_Z_to_Z_28,__sd_Z_to_Z_29);
      __sd_variant_decr_1 = __gmpz_cmp(__sd_Z_sub_13,__sd_Z_sub_12);
      if (__sd_variant_decr_1 >= 0) pathcrawler_assert_exception("non decreasing",
                                                                 11);
      __gmpz_clear(__sd_Z_cst_7);
      __gmpz_clear(__sd_Z_to_Z_25);
      __gmpz_clear(__sd_Z_to_Z_28);
      __gmpz_clear(__sd_Z_to_Z_29);
      __gmpz_clear(__sd_Z_sub_13);
      __gmpz_clear(__sd_Z_to_Z_26);
      __gmpz_clear(__sd_Z_to_Z_27);
      __gmpz_clear(__sd_Z_sub_12);
      
    }
    
    free(old_ptr_A);
    free(old_ptr_B);
    return;
  }
}

int min(int x, int y)
{
  int old_x;
  int old_y;
  old_x = x;
  old_y = y;
  {
    int tmp;
    if (x <= y) {
      tmp = x;
    }
    else {
      tmp = y;
    }
    
    return tmp;
  }
}

void BottomUpSort(int n, int *A, int *B)
{
  mpz_t __sd_Z_cst_8;
  int __sd_to_ctype_10;
  mpz_t __sd_Z_to_Z_30;
  mpz_t __sd_Z_cst_9;
  mpz_t __sd_Z_sub_14;
  int __sd_to_ctype_11;
  int __sd_valid_4;
  mpz_t __sd_Z_cst_10;
  int __sd_to_ctype_12;
  mpz_t __sd_Z_to_Z_31;
  mpz_t __sd_Z_cst_11;
  mpz_t __sd_Z_sub_15;
  int __sd_to_ctype_13;
  int __sd_valid_5;
  int old_n;
  int *old_A;
  int *old_ptr_A;
  mpz_t __sd_Z_to_Z_32;
  unsigned long __sd_to_ctype_14;
  unsigned long __sd_iter_4;
  int *old_B;
  int *old_ptr_B;
  mpz_t __sd_Z_to_Z_33;
  unsigned long __sd_to_ctype_15;
  unsigned long __sd_iter_5;
  __gmpz_init_set_str(__sd_Z_cst_8,"0",10);
  __sd_to_ctype_10 = (int)__gmpz_get_si(__sd_Z_cst_8);
  __gmpz_init_set_si(__sd_Z_to_Z_30,n);
  __gmpz_init_set_str(__sd_Z_cst_9,"1",10);
  __gmpz_init(__sd_Z_sub_14);
  __gmpz_sub(__sd_Z_sub_14,__sd_Z_to_Z_30,__sd_Z_cst_9);
  __sd_to_ctype_11 = (int)__gmpz_get_si(__sd_Z_sub_14);
  if (__sd_to_ctype_10 <= __sd_to_ctype_11) {
    int __sd_valid_dim_4;
    __sd_valid_dim_4 = pathcrawler_dimension(A);
    __sd_valid_4 = __sd_to_ctype_11 >= 0 && __sd_valid_dim_4 > __sd_to_ctype_11;
  }
  else __sd_valid_4 = 1;
  if (! __sd_valid_4) pathcrawler_assert_exception("",6);
  __gmpz_init_set_str(__sd_Z_cst_10,"0",10);
  __sd_to_ctype_12 = (int)__gmpz_get_si(__sd_Z_cst_10);
  __gmpz_init_set_si(__sd_Z_to_Z_31,n);
  __gmpz_init_set_str(__sd_Z_cst_11,"1",10);
  __gmpz_init(__sd_Z_sub_15);
  __gmpz_sub(__sd_Z_sub_15,__sd_Z_to_Z_31,__sd_Z_cst_11);
  __sd_to_ctype_13 = (int)__gmpz_get_si(__sd_Z_sub_15);
  if (__sd_to_ctype_12 <= __sd_to_ctype_13) {
    int __sd_valid_dim_5;
    __sd_valid_dim_5 = pathcrawler_dimension(B);
    __sd_valid_5 = __sd_to_ctype_13 >= 0 && __sd_valid_dim_5 > __sd_to_ctype_13;
  }
  else __sd_valid_5 = 1;
  if (! __sd_valid_5) pathcrawler_assert_exception("",21);
  old_n = n;
  old_A = A;
  __gmpz_init_set_si(__sd_Z_to_Z_32,n);
  __sd_to_ctype_14 = __gmpz_get_ui(__sd_Z_to_Z_32);
  old_ptr_A = (int *)malloc(__sd_to_ctype_14 * (unsigned long)sizeof(int));
  __sd_iter_4 = 0;
  while (__sd_iter_4 < __sd_to_ctype_14) {
    *(old_ptr_A + __sd_iter_4) = *(A + __sd_iter_4);
    __sd_iter_4 ++;
  }
  old_B = B;
  __gmpz_init_set_si(__sd_Z_to_Z_33,n);
  __sd_to_ctype_15 = __gmpz_get_ui(__sd_Z_to_Z_33);
  old_ptr_B = (int *)malloc(__sd_to_ctype_15 * (unsigned long)sizeof(int));
  __sd_iter_5 = 0;
  while (__sd_iter_5 < __sd_to_ctype_15) {
    *(old_ptr_B + __sd_iter_5) = *(B + __sd_iter_5);
    __sd_iter_5 ++;
  }
  __gmpz_clear(__sd_Z_cst_8);
  __gmpz_clear(__sd_Z_to_Z_30);
  __gmpz_clear(__sd_Z_cst_9);
  __gmpz_clear(__sd_Z_sub_14);
  __gmpz_clear(__sd_Z_cst_10);
  __gmpz_clear(__sd_Z_to_Z_31);
  __gmpz_clear(__sd_Z_cst_11);
  __gmpz_clear(__sd_Z_sub_15);
  __gmpz_clear(__sd_Z_to_Z_32);
  __gmpz_clear(__sd_Z_to_Z_33);
  {
    int width;
    width = 1;
    {
      mpz_t __sd_Z_cst_18;
      mpz_t __sd_Z_to_Z_46;
      int __sd_le_6;
      int __sd_and_10;
      __gmpz_init_set_str(__sd_Z_cst_18,"1",10);
      __gmpz_init_set_si(__sd_Z_to_Z_46,width);
      __sd_le_6 = __gmpz_cmp(__sd_Z_cst_18,__sd_Z_to_Z_46);
      __sd_and_10 = __sd_le_6 <= 0;
      if (__sd_and_10) {
        mpz_t __sd_Z_to_Z_47;
        mpz_t __sd_Z_cst_19;
        mpz_t __sd_Z_to_Z_48;
        mpz_t __sd_Z_mul_2;
        mpz_t __sd_Z_cst_20;
        mpz_t __sd_Z_sub_20;
        int __sd_le_7;
        __gmpz_init_set_si(__sd_Z_to_Z_47,width);
        __gmpz_init_set_str(__sd_Z_cst_19,"2",10);
        __gmpz_init_set_si(__sd_Z_to_Z_48,n);
        __gmpz_init(__sd_Z_mul_2);
        __gmpz_mul(__sd_Z_mul_2,__sd_Z_cst_19,__sd_Z_to_Z_48);
        __gmpz_init_set_str(__sd_Z_cst_20,"1",10);
        __gmpz_init(__sd_Z_sub_20);
        __gmpz_sub(__sd_Z_sub_20,__sd_Z_mul_2,__sd_Z_cst_20);
        __sd_le_7 = __gmpz_cmp(__sd_Z_to_Z_47,__sd_Z_sub_20);
        __sd_and_10 = __sd_le_7 <= 0;
        __gmpz_clear(__sd_Z_to_Z_47);
        __gmpz_clear(__sd_Z_cst_19);
        __gmpz_clear(__sd_Z_to_Z_48);
        __gmpz_clear(__sd_Z_mul_2);
        __gmpz_clear(__sd_Z_cst_20);
        __gmpz_clear(__sd_Z_sub_20);
      }
      if (! __sd_and_10) pathcrawler_assert_exception("not established",1);
      __gmpz_clear(__sd_Z_cst_18);
      __gmpz_clear(__sd_Z_to_Z_46);
      
    }
    while (1) {
      
        if (! (width < n)) {
          break;
        }
        mpz_t __sd_Z_to_Z_52;
      mpz_t __sd_Z_to_Z_53;
      mpz_t __sd_Z_sub_22;
      int __sd_variant_pos_3;
      __gmpz_init_set_si(__sd_Z_to_Z_52,n);
      __gmpz_init_set_si(__sd_Z_to_Z_53,width);
      __gmpz_init(__sd_Z_sub_22);
      __gmpz_sub(__sd_Z_sub_22,__sd_Z_to_Z_52,__sd_Z_to_Z_53);
      __sd_variant_pos_3 = __gmpz_cmp_ui(__sd_Z_sub_22,0);
      if (__sd_variant_pos_3 < 0) pathcrawler_assert_exception("non positive",
                                                               24);
      {
        {
          int i;
          i = 0;
          {
            mpz_t __sd_Z_cst_12;
            mpz_t __sd_Z_to_Z_34;
            int __sd_le_2;
            int __sd_and_8;
            __gmpz_init_set_str(__sd_Z_cst_12,"0",10);
            __gmpz_init_set_si(__sd_Z_to_Z_34,i);
            __sd_le_2 = __gmpz_cmp(__sd_Z_cst_12,__sd_Z_to_Z_34);
            __sd_and_8 = __sd_le_2 <= 0;
            if (__sd_and_8) {
              mpz_t __sd_Z_to_Z_35;
              mpz_t __sd_Z_to_Z_36;
              mpz_t __sd_Z_cst_13;
              mpz_t __sd_Z_to_Z_37;
              mpz_t __sd_Z_mul_0;
              mpz_t __sd_Z_add_2;
              mpz_t __sd_Z_cst_14;
              mpz_t __sd_Z_sub_16;
              int __sd_le_3;
              __gmpz_init_set_si(__sd_Z_to_Z_35,i);
              __gmpz_init_set_si(__sd_Z_to_Z_36,n);
              __gmpz_init_set_str(__sd_Z_cst_13,"2",10);
              __gmpz_init_set_si(__sd_Z_to_Z_37,width);
              __gmpz_init(__sd_Z_mul_0);
              __gmpz_mul(__sd_Z_mul_0,__sd_Z_cst_13,__sd_Z_to_Z_37);
              __gmpz_init(__sd_Z_add_2);
              __gmpz_add(__sd_Z_add_2,__sd_Z_to_Z_36,__sd_Z_mul_0);
              __gmpz_init_set_str(__sd_Z_cst_14,"1",10);
              __gmpz_init(__sd_Z_sub_16);
              __gmpz_sub(__sd_Z_sub_16,__sd_Z_add_2,__sd_Z_cst_14);
              __sd_le_3 = __gmpz_cmp(__sd_Z_to_Z_35,__sd_Z_sub_16);
              __sd_and_8 = __sd_le_3 <= 0;
              __gmpz_clear(__sd_Z_to_Z_35);
              __gmpz_clear(__sd_Z_to_Z_36);
              __gmpz_clear(__sd_Z_cst_13);
              __gmpz_clear(__sd_Z_to_Z_37);
              __gmpz_clear(__sd_Z_mul_0);
              __gmpz_clear(__sd_Z_add_2);
              __gmpz_clear(__sd_Z_cst_14);
              __gmpz_clear(__sd_Z_sub_16);
            }
            if (! __sd_and_8) pathcrawler_assert_exception("not established",
                                                           27);
            __gmpz_clear(__sd_Z_cst_12);
            __gmpz_clear(__sd_Z_to_Z_34);
            
          }
          while (1) {
            
              if (! (i < n)) {
                break;
              }
              mpz_t __sd_Z_to_Z_42;
            mpz_t __sd_Z_to_Z_43;
            mpz_t __sd_Z_sub_18;
            int __sd_variant_pos_2;
            __gmpz_init_set_si(__sd_Z_to_Z_42,n);
            __gmpz_init_set_si(__sd_Z_to_Z_43,i);
            __gmpz_init(__sd_Z_sub_18);
            __gmpz_sub(__sd_Z_sub_18,__sd_Z_to_Z_42,__sd_Z_to_Z_43);
            __sd_variant_pos_2 = __gmpz_cmp_ui(__sd_Z_sub_18,0);
            if (__sd_variant_pos_2 < 0) pathcrawler_assert_exception("non positive",
                                                                    10);
            {
              {
                int tmp;
                int tmp_0;
                ;
                tmp = min(i + 2 * width,n);
                tmp_0 = min(i + width,n);
                ;
                ;
                BottomUpMerge(A,i,tmp_0,tmp,B);
              }
              i += 2 * width;
            }mpz_t __sd_Z_cst_15;
            mpz_t __sd_Z_to_Z_38;
            int __sd_le_4;
            int __sd_and_9;
            mpz_t __sd_Z_to_Z_44;
            mpz_t __sd_Z_to_Z_45;
            mpz_t __sd_Z_sub_19;
            int __sd_variant_decr_2;
            __gmpz_init_set_str(__sd_Z_cst_15,"0",10);
            __gmpz_init_set_si(__sd_Z_to_Z_38,i);
            __sd_le_4 = __gmpz_cmp(__sd_Z_cst_15,__sd_Z_to_Z_38);
            __sd_and_9 = __sd_le_4 <= 0;
            if (__sd_and_9) {
              mpz_t __sd_Z_to_Z_39;
              mpz_t __sd_Z_to_Z_40;
              mpz_t __sd_Z_cst_16;
              mpz_t __sd_Z_to_Z_41;
              mpz_t __sd_Z_mul_1;
              mpz_t __sd_Z_add_3;
              mpz_t __sd_Z_cst_17;
              mpz_t __sd_Z_sub_17;
              int __sd_le_5;
              __gmpz_init_set_si(__sd_Z_to_Z_39,i);
              __gmpz_init_set_si(__sd_Z_to_Z_40,n);
              __gmpz_init_set_str(__sd_Z_cst_16,"2",10);
              __gmpz_init_set_si(__sd_Z_to_Z_41,width);
              __gmpz_init(__sd_Z_mul_1);
              __gmpz_mul(__sd_Z_mul_1,__sd_Z_cst_16,__sd_Z_to_Z_41);
              __gmpz_init(__sd_Z_add_3);
              __gmpz_add(__sd_Z_add_3,__sd_Z_to_Z_40,__sd_Z_mul_1);
              __gmpz_init_set_str(__sd_Z_cst_17,"1",10);
              __gmpz_init(__sd_Z_sub_17);
              __gmpz_sub(__sd_Z_sub_17,__sd_Z_add_3,__sd_Z_cst_17);
              __sd_le_5 = __gmpz_cmp(__sd_Z_to_Z_39,__sd_Z_sub_17);
              __sd_and_9 = __sd_le_5 <= 0;
              __gmpz_clear(__sd_Z_to_Z_39);
              __gmpz_clear(__sd_Z_to_Z_40);
              __gmpz_clear(__sd_Z_cst_16);
              __gmpz_clear(__sd_Z_to_Z_41);
              __gmpz_clear(__sd_Z_mul_1);
              __gmpz_clear(__sd_Z_add_3);
              __gmpz_clear(__sd_Z_cst_17);
              __gmpz_clear(__sd_Z_sub_17);
            }
            if (! __sd_and_9) pathcrawler_assert_exception("not preserved",
                                                           27);
            __gmpz_init_set_si(__sd_Z_to_Z_44,n);
            __gmpz_init_set_si(__sd_Z_to_Z_45,i);
            __gmpz_init(__sd_Z_sub_19);
            __gmpz_sub(__sd_Z_sub_19,__sd_Z_to_Z_44,__sd_Z_to_Z_45);
            __sd_variant_decr_2 = __gmpz_cmp(__sd_Z_sub_19,__sd_Z_sub_18);
            if (__sd_variant_decr_2 >= 0) pathcrawler_assert_exception
                                          ("non decreasing",10);
            __gmpz_clear(__sd_Z_cst_15);
            __gmpz_clear(__sd_Z_to_Z_38);
            __gmpz_clear(__sd_Z_to_Z_44);
            __gmpz_clear(__sd_Z_to_Z_45);
            __gmpz_clear(__sd_Z_sub_19);
            __gmpz_clear(__sd_Z_to_Z_42);
            __gmpz_clear(__sd_Z_to_Z_43);
            __gmpz_clear(__sd_Z_sub_18);
            
          }
          
          CopyArray(A,B,n);
        }
        width = 2 * width;
      }mpz_t __sd_Z_cst_21;
      mpz_t __sd_Z_to_Z_49;
      int __sd_le_8;
      int __sd_and_11;
      mpz_t __sd_Z_to_Z_54;
      mpz_t __sd_Z_to_Z_55;
      mpz_t __sd_Z_sub_23;
      int __sd_variant_decr_3;
      __gmpz_init_set_str(__sd_Z_cst_21,"1",10);
      __gmpz_init_set_si(__sd_Z_to_Z_49,width);
      __sd_le_8 = __gmpz_cmp(__sd_Z_cst_21,__sd_Z_to_Z_49);
      __sd_and_11 = __sd_le_8 <= 0;
      if (__sd_and_11) {
        mpz_t __sd_Z_to_Z_50;
        mpz_t __sd_Z_cst_22;
        mpz_t __sd_Z_to_Z_51;
        mpz_t __sd_Z_mul_3;
        mpz_t __sd_Z_cst_23;
        mpz_t __sd_Z_sub_21;
        int __sd_le_9;
        __gmpz_init_set_si(__sd_Z_to_Z_50,width);
        __gmpz_init_set_str(__sd_Z_cst_22,"2",10);
        __gmpz_init_set_si(__sd_Z_to_Z_51,n);
        __gmpz_init(__sd_Z_mul_3);
        __gmpz_mul(__sd_Z_mul_3,__sd_Z_cst_22,__sd_Z_to_Z_51);
        __gmpz_init_set_str(__sd_Z_cst_23,"1",10);
        __gmpz_init(__sd_Z_sub_21);
        __gmpz_sub(__sd_Z_sub_21,__sd_Z_mul_3,__sd_Z_cst_23);
        __sd_le_9 = __gmpz_cmp(__sd_Z_to_Z_50,__sd_Z_sub_21);
        __sd_and_11 = __sd_le_9 <= 0;
        __gmpz_clear(__sd_Z_to_Z_50);
        __gmpz_clear(__sd_Z_cst_22);
        __gmpz_clear(__sd_Z_to_Z_51);
        __gmpz_clear(__sd_Z_mul_3);
        __gmpz_clear(__sd_Z_cst_23);
        __gmpz_clear(__sd_Z_sub_21);
      }
      if (! __sd_and_11) pathcrawler_assert_exception("not preserved",1);
      __gmpz_init_set_si(__sd_Z_to_Z_54,n);
      __gmpz_init_set_si(__sd_Z_to_Z_55,width);
      __gmpz_init(__sd_Z_sub_23);
      __gmpz_sub(__sd_Z_sub_23,__sd_Z_to_Z_54,__sd_Z_to_Z_55);
      __sd_variant_decr_3 = __gmpz_cmp(__sd_Z_sub_23,__sd_Z_sub_22);
      if (__sd_variant_decr_3 >= 0) pathcrawler_assert_exception("non decreasing",
                                                                 24);
      __gmpz_clear(__sd_Z_cst_21);
      __gmpz_clear(__sd_Z_to_Z_49);
      __gmpz_clear(__sd_Z_to_Z_54);
      __gmpz_clear(__sd_Z_to_Z_55);
      __gmpz_clear(__sd_Z_sub_23);
      __gmpz_clear(__sd_Z_to_Z_52);
      __gmpz_clear(__sd_Z_to_Z_53);
      __gmpz_clear(__sd_Z_sub_22);
      
    }
    
    free(old_ptr_A);
    free(old_ptr_B);
    return;
  }
}

void merge_sort(int *table, int l, int *ret)
{
  int *old_table;
  int *old_ptr_table;
  mpz_t __sd_Z_to_Z_57;
  unsigned long __sd_to_ctype_18;
  unsigned long __sd_iter_6;
  int old_l;
  int *old_ret;
  int *old_ptr_ret;
  mpz_t __sd_Z_to_Z_58;
  unsigned long __sd_to_ctype_19;
  unsigned long __sd_iter_7;
  old_table = table;
  __gmpz_init_set_si(__sd_Z_to_Z_57,l);
  __sd_to_ctype_18 = __gmpz_get_ui(__sd_Z_to_Z_57);
  old_ptr_table = (int *)malloc(__sd_to_ctype_18 * (unsigned long)sizeof(int));
  __sd_iter_6 = 0;
  while (__sd_iter_6 < __sd_to_ctype_18) {
    *(old_ptr_table + __sd_iter_6) = *(table + __sd_iter_6);
    __sd_iter_6 ++;
  }
  old_l = l;
  old_ret = ret;
  __gmpz_init_set_si(__sd_Z_to_Z_58,l);
  __sd_to_ctype_19 = __gmpz_get_ui(__sd_Z_to_Z_58);
  old_ptr_ret = (int *)malloc(__sd_to_ctype_19 * (unsigned long)sizeof(int));
  __sd_iter_7 = 0;
  while (__sd_iter_7 < __sd_to_ctype_19) {
    *(old_ptr_ret + __sd_iter_7) = *(ret + __sd_iter_7);
    __sd_iter_7 ++;
  }
  __gmpz_clear(__sd_Z_to_Z_57);
  __gmpz_clear(__sd_Z_to_Z_58);
  {
    BottomUpSort(l,table,ret);
    {
      int __sd_forall_0;
      __sd_forall_0 = 1;
      {
        mpz_t __sd_Z_cst_24;
        mpz_t __sd_Z_to_Z_56;
        mpz_t __sd_Z_cst_25;
        mpz_t __sd_Z_sub_24;
        mpz_t __q_i;
        int __sd_forall_cmp_0;
        __gmpz_init_set_str(__sd_Z_cst_24,"0",10);
        __gmpz_init_set_si(__sd_Z_to_Z_56,old_l);
        __gmpz_init_set_str(__sd_Z_cst_25,"1",10);
        __gmpz_init(__sd_Z_sub_24);
        __gmpz_sub(__sd_Z_sub_24,__sd_Z_to_Z_56,__sd_Z_cst_25);
        __gmpz_init_set(__q_i,__sd_Z_cst_24);
        __sd_forall_cmp_0 = __gmpz_cmp(__q_i,__sd_Z_sub_24);
        while (__sd_forall_cmp_0 < 0 && __sd_forall_0) {
          mpz_t __sd_Z_lval_0;
          int __sd_to_ctype_16;
          mpz_t __sd_Z_lval_1;
          mpz_t __sd_Z_cst_26;
          mpz_t __sd_Z_add_4;
          int __sd_to_ctype_17;
          __gmpz_init_set(__sd_Z_lval_0,__q_i);
          __sd_to_ctype_16 = (int)__gmpz_get_si(__sd_Z_lval_0);
          __gmpz_init_set(__sd_Z_lval_1,__q_i);
          __gmpz_init_set_str(__sd_Z_cst_26,"1",10);
          __gmpz_init(__sd_Z_add_4);
          __gmpz_add(__sd_Z_add_4,__sd_Z_lval_1,__sd_Z_cst_26);
          __sd_to_ctype_17 = (int)__gmpz_get_si(__sd_Z_add_4);
          __sd_forall_0 = *(old_ret + __sd_to_ctype_16) <= *(old_ret + __sd_to_ctype_17);
          __gmpz_add_ui(__q_i,__q_i,1);
          __sd_forall_cmp_0 = __gmpz_cmp(__q_i,__sd_Z_sub_24);
          __gmpz_clear(__sd_Z_lval_0);
          __gmpz_clear(__sd_Z_lval_1);
          __gmpz_clear(__sd_Z_cst_26);
          __gmpz_clear(__sd_Z_add_4);
        }
        __gmpz_clear(__sd_Z_cst_24);
        __gmpz_clear(__sd_Z_to_Z_56);
        __gmpz_clear(__sd_Z_cst_25);
        __gmpz_clear(__sd_Z_sub_24);
        __gmpz_clear(__q_i);
      }
      if (! __sd_forall_0) pathcrawler_assert_exception("",17);
    }
    free(old_ptr_table);
    free(old_ptr_ret);
    return;
  }
}
[kernel] Parsing __sd_instru_merge_sort_merge_sort.c (with preprocessing)
[kernel] Parsing __sd_instru_merge_sort_merge_sort.c (with preprocessing)
[pc] Starting lanceur_merge_sort (isc version)
[pc] Starting lanceur_pathcrawler__merge_sort_precond (isc version)
[stady] all-paths: true
[stady] 1331 test cases
[report] Computing properties status...

--------------------------------------------------------------------------------
--- Properties of Function 'BottomUpMerge'
--------------------------------------------------------------------------------

[  Valid  ] Pre-condition (file tests/merge_sort/merge_sort.c, line 6)
            by StaDy.
[  Valid  ] Pre-condition (file tests/merge_sort/merge_sort.c, line 7)
            by StaDy.
[  Valid  ] Loop variant at loop (file tests/merge_sort/merge_sort.c, line 20)
            by StaDy.
[  Valid  ] Invariant (file tests/merge_sort/merge_sort.c, line 13)
            by StaDy.
[  Valid  ] Invariant (file tests/merge_sort/merge_sort.c, line 14)
            by StaDy.
[  Valid  ] Invariant (file tests/merge_sort/merge_sort.c, line 15)
            by StaDy.
[  Valid  ] Invariant (file tests/merge_sort/merge_sort.c, line 16)
            by StaDy.
[  Valid  ] Default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'CopyArray'
--------------------------------------------------------------------------------

[  Valid  ] Pre-condition (file tests/merge_sort/merge_sort.c, line 34)
            by StaDy.
[  Valid  ] Pre-condition (file tests/merge_sort/merge_sort.c, line 35)
            by StaDy.
[  Valid  ] Loop variant at loop (file tests/merge_sort/merge_sort.c, line 44)
            by StaDy.
[  Valid  ] Invariant (file tests/merge_sort/merge_sort.c, line 39)
            by StaDy.
[  Valid  ] Default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'BottomUpSort'
--------------------------------------------------------------------------------

[  Valid  ] Pre-condition (file tests/merge_sort/merge_sort.c, line 55)
            by StaDy.
[  Valid  ] Pre-condition (file tests/merge_sort/merge_sort.c, line 56)
            by StaDy.
[  Valid  ] Loop variant at loop (file tests/merge_sort/merge_sort.c, line 68)
            by StaDy.
[  Valid  ] Loop variant at loop (file tests/merge_sort/merge_sort.c, line 75)
            by StaDy.
[  Valid  ] Invariant (file tests/merge_sort/merge_sort.c, line 65)
            by StaDy.
[  Valid  ] Invariant (file tests/merge_sort/merge_sort.c, line 72)
            by StaDy.
[  Valid  ] Default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'merge_sort'
--------------------------------------------------------------------------------

[  Valid  ] Post-condition (file tests/merge_sort/merge_sort.c, line 94)
            by StaDy.
[  Valid  ] Default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Status Report Summary
--------------------------------------------------------------------------------
    22 Completely validated
    22 Total
--------------------------------------------------------------------------------
