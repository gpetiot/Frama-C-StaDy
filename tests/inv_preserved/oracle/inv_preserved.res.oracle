[kernel] Parsing tests/inv_preserved/inv_preserved.c (with preprocessing)
[stady:generated-pl] generated Prolog precondition:
:- module(test_parameters).
:- import create_input_val/3 from substitution.
:- export dom/4.
:- export create_input_vals/2.
:- export unquantif_preconds/2.
:- export quantif_preconds/2.
:- export strategy/2.
:- export precondition_of/2.

dom(0,0,0,0).
dom('f', cont('t',_), [], int([-2147483648..2147483647])).
dom('f', cont('nondet_sint_val',_), [], int([-2147483648..2147483647])).
dom('f', 'nondet_sint_cpt', [], int([0])).
dom('pathcrawler__f_precond',A,B,C) :-
  dom('f',A,B,C).
create_input_vals('f', Ins):-
  create_input_val(dim('t'), int([0..4294967295]),Ins),
  create_input_val('n', int([-2147483648..2147483647]),Ins),
  create_input_val(dim('nondet_sint_val'), int([0..4294967295]),Ins),
  true.
create_input_vals('pathcrawler__f_precond',Ins) :-
  create_input_vals('f',Ins).
quantif_preconds('f',
  [

  ]
).
quantif_preconds('pathcrawler__f_precond',A) :-
  quantif_preconds('f',A).
unquantif_preconds('f',
  [
    cond(supegal,'n',3,pre),
    cond(egal,dim('t'),+(int(math), -(int(math), 'n', 1), 1),pre),
    cond(inf,'n',6,pre)
  ]
).
unquantif_preconds('pathcrawler__f_precond',A) :-
  unquantif_preconds('f',A).
strategy('f',[]).
strategy('pathcrawler__f_precond',A) :-
  strategy('f',A).
precondition_of('f','pathcrawler__f_precond').
[stady:generated-c] generated C file:
#include "/usr/local/share/frama-c/stady/externals.h"
#include "/usr/local/share/frama-c/stady/nondet.c"

int f_precond(int n, int *t) {
  return 1;
  
}
int fmax(int x, int y)
{
  int old_x;
  int old_y;
  old_x = x;
  old_y = y;
  {
    int tmp;
    if (x >= y) tmp = x; else tmp = y;
    return tmp;
  }
}

void f(int n, int *t)
{
  int old_n;
  int *old_t;
  int *old_ptr_t;
  mpz_t __sd_Z_to_Z_0;
  unsigned long __sd_to_ctype_0;
  unsigned long __sd_iter_0;
  old_n = n;
  old_t = t;
  __gmpz_init_set_si(__sd_Z_to_Z_0,n);
  __sd_to_ctype_0 = __gmpz_get_ui(__sd_Z_to_Z_0);
  old_ptr_t = (int *)malloc(__sd_to_ctype_0 * (unsigned long)sizeof(int));
  __sd_iter_0 = 0;
  while (__sd_iter_0 < __sd_to_ctype_0) {
    *(old_ptr_t + __sd_iter_0) = *(t + __sd_iter_0);
    __sd_iter_0 ++;
  }
  __gmpz_clear(__sd_Z_to_Z_0);
  {
    int i = 3;
    *(t + 2) = fmax(*(t + 1),*(t + 0));
    first_loop:
      {
        mpz_t __sd_Z_cst_7;
        mpz_t __sd_Z_to_Z_4;
        int __sd_le_1;
        int __sd_and_1;
        int __sd_forall_1;
        __gmpz_init_set_str(__sd_Z_cst_7,"3",10);
        __gmpz_init_set_si(__sd_Z_to_Z_4,i);
        __sd_le_1 = __gmpz_cmp(__sd_Z_cst_7,__sd_Z_to_Z_4);
        __sd_and_1 = __sd_le_1 <= 0;
        if (__sd_and_1) __sd_and_1 = i <= n;
        if (! __sd_and_1) pathcrawler_assert_exception("9$not established",2);
        __sd_forall_1 = 1;
        {
          mpz_t __sd_Z_cst_9;
          mpz_t __sd_Z_to_Z_6;
          mpz_t __sd_Z_cst_10;
          mpz_t __sd_Z_sub_4;
          mpz_t __q_k;
          int __sd_forall_cmp_1;
          __gmpz_init_set_str(__sd_Z_cst_9,"2",10);
          __gmpz_init_set_si(__sd_Z_to_Z_6,i);
          __gmpz_init_set_str(__sd_Z_cst_10,"1",10);
          __gmpz_init(__sd_Z_sub_4);
          __gmpz_sub(__sd_Z_sub_4,__sd_Z_to_Z_6,__sd_Z_cst_10);
          __gmpz_init_set(__q_k,__sd_Z_cst_9);
          __sd_forall_cmp_1 = __gmpz_cmp(__q_k,__sd_Z_sub_4);
          while (__sd_forall_cmp_1 < 0 && __sd_forall_1) {
            mpz_t __sd_Z_lval_4;
            int __sd_to_ctype_7;
            mpz_t __sd_Z_lval_5;
            mpz_t __sd_Z_cst_11;
            mpz_t __sd_Z_sub_5;
            int __sd_to_ctype_8;
            int __sd_or_1;
            __gmpz_init_set(__sd_Z_lval_4,__q_k);
            __sd_to_ctype_7 = (int)__gmpz_get_si(__sd_Z_lval_4);
            __gmpz_init_set(__sd_Z_lval_5,__q_k);
            __gmpz_init_set_str(__sd_Z_cst_11,"1",10);
            __gmpz_init(__sd_Z_sub_5);
            __gmpz_sub(__sd_Z_sub_5,__sd_Z_lval_5,__sd_Z_cst_11);
            __sd_to_ctype_8 = (int)__gmpz_get_si(__sd_Z_sub_5);
            __sd_or_1 = *(t + __sd_to_ctype_7) == *(t + __sd_to_ctype_8);
            if (! __sd_or_1) {
              mpz_t __sd_Z_lval_6;
              int __sd_to_ctype_9;
              mpz_t __sd_Z_lval_7;
              mpz_t __sd_Z_cst_12;
              mpz_t __sd_Z_sub_6;
              int __sd_to_ctype_10;
              __gmpz_init_set(__sd_Z_lval_6,__q_k);
              __sd_to_ctype_9 = (int)__gmpz_get_si(__sd_Z_lval_6);
              __gmpz_init_set(__sd_Z_lval_7,__q_k);
              __gmpz_init_set_str(__sd_Z_cst_12,"2",10);
              __gmpz_init(__sd_Z_sub_6);
              __gmpz_sub(__sd_Z_sub_6,__sd_Z_lval_7,__sd_Z_cst_12);
              __sd_to_ctype_10 = (int)__gmpz_get_si(__sd_Z_sub_6);
              __sd_or_1 = *(t + __sd_to_ctype_9) == *(t + __sd_to_ctype_10);
              __gmpz_clear(__sd_Z_lval_6);
              __gmpz_clear(__sd_Z_lval_7);
              __gmpz_clear(__sd_Z_cst_12);
              __gmpz_clear(__sd_Z_sub_6);
            }
            __sd_forall_1 = __sd_or_1;
            __gmpz_add_ui(__q_k,__q_k,1);
            __sd_forall_cmp_1 = __gmpz_cmp(__q_k,__sd_Z_sub_4);
            __gmpz_clear(__sd_Z_lval_4);
            __gmpz_clear(__sd_Z_lval_5);
            __gmpz_clear(__sd_Z_cst_11);
            __gmpz_clear(__sd_Z_sub_5);
          }
          __gmpz_clear(__sd_Z_cst_9);
          __gmpz_clear(__sd_Z_to_Z_6);
          __gmpz_clear(__sd_Z_cst_10);
          __gmpz_clear(__sd_Z_sub_4);
          __gmpz_clear(__q_k);
        }
        if (! __sd_forall_1) pathcrawler_assert_exception("9$not established",
                                                          6);
        if (1) {
          mpz_t __sd_Z_cst_0;
          int __sd_to_ctype_1;
          mpz_t __sd_Z_to_Z_1;
          mpz_t __sd_Z_cst_1;
          mpz_t __sd_Z_sub_0;
          int __sd_to_ctype_2;
          int __sd_iter_1;
          mpz_t __sd_Z_cst_2;
          mpz_t __sd_Z_to_Z_2;
          int __sd_le_0;
          int __sd_and_0;
          int __sd_forall_0;
          __gmpz_init_set_str(__sd_Z_cst_0,"3",10);
          __sd_to_ctype_1 = (int)__gmpz_get_si(__sd_Z_cst_0);
          __gmpz_init_set_si(__sd_Z_to_Z_1,n);
          __gmpz_init_set_str(__sd_Z_cst_1,"1",10);
          __gmpz_init(__sd_Z_sub_0);
          __gmpz_sub(__sd_Z_sub_0,__sd_Z_to_Z_1,__sd_Z_cst_1);
          __sd_to_ctype_2 = (int)__gmpz_get_si(__sd_Z_sub_0);
          __sd_iter_1 = __sd_to_ctype_1;
          while (__sd_iter_1 <= __sd_to_ctype_2) {
            *(t + __sd_iter_1) = nondet_sint("*(t + __sd_iter_1)");
            __sd_iter_1 ++;
          }
          i = nondet_sint("i");
          __gmpz_init_set_str(__sd_Z_cst_2,"3",10);
          __gmpz_init_set_si(__sd_Z_to_Z_2,i);
          __sd_le_0 = __gmpz_cmp(__sd_Z_cst_2,__sd_Z_to_Z_2);
          __sd_and_0 = __sd_le_0 <= 0;
          if (__sd_and_0) __sd_and_0 = i <= n;
          if (! __sd_and_0) pathcrawler_assume_exception("",0);
          __sd_forall_0 = 1;
          {
            mpz_t __sd_Z_cst_3;
            mpz_t __sd_Z_to_Z_3;
            mpz_t __sd_Z_cst_4;
            mpz_t __sd_Z_sub_1;
            mpz_t __q_k;
            int __sd_forall_cmp_0;
            __gmpz_init_set_str(__sd_Z_cst_3,"2",10);
            __gmpz_init_set_si(__sd_Z_to_Z_3,i);
            __gmpz_init_set_str(__sd_Z_cst_4,"1",10);
            __gmpz_init(__sd_Z_sub_1);
            __gmpz_sub(__sd_Z_sub_1,__sd_Z_to_Z_3,__sd_Z_cst_4);
            __gmpz_init_set(__q_k,__sd_Z_cst_3);
            __sd_forall_cmp_0 = __gmpz_cmp(__q_k,__sd_Z_sub_1);
            while (__sd_forall_cmp_0 < 0 && __sd_forall_0) {
              mpz_t __sd_Z_lval_0;
              int __sd_to_ctype_3;
              mpz_t __sd_Z_lval_1;
              mpz_t __sd_Z_cst_5;
              mpz_t __sd_Z_sub_2;
              int __sd_to_ctype_4;
              int __sd_or_0;
              __gmpz_init_set(__sd_Z_lval_0,__q_k);
              __sd_to_ctype_3 = (int)__gmpz_get_si(__sd_Z_lval_0);
              __gmpz_init_set(__sd_Z_lval_1,__q_k);
              __gmpz_init_set_str(__sd_Z_cst_5,"1",10);
              __gmpz_init(__sd_Z_sub_2);
              __gmpz_sub(__sd_Z_sub_2,__sd_Z_lval_1,__sd_Z_cst_5);
              __sd_to_ctype_4 = (int)__gmpz_get_si(__sd_Z_sub_2);
              __sd_or_0 = *(t + __sd_to_ctype_3) == *(t + __sd_to_ctype_4);
              if (! __sd_or_0) {
                mpz_t __sd_Z_lval_2;
                int __sd_to_ctype_5;
                mpz_t __sd_Z_lval_3;
                mpz_t __sd_Z_cst_6;
                mpz_t __sd_Z_sub_3;
                int __sd_to_ctype_6;
                __gmpz_init_set(__sd_Z_lval_2,__q_k);
                __sd_to_ctype_5 = (int)__gmpz_get_si(__sd_Z_lval_2);
                __gmpz_init_set(__sd_Z_lval_3,__q_k);
                __gmpz_init_set_str(__sd_Z_cst_6,"2",10);
                __gmpz_init(__sd_Z_sub_3);
                __gmpz_sub(__sd_Z_sub_3,__sd_Z_lval_3,__sd_Z_cst_6);
                __sd_to_ctype_6 = (int)__gmpz_get_si(__sd_Z_sub_3);
                __sd_or_0 = *(t + __sd_to_ctype_5) == *(t + __sd_to_ctype_6);
                __gmpz_clear(__sd_Z_lval_2);
                __gmpz_clear(__sd_Z_lval_3);
                __gmpz_clear(__sd_Z_cst_6);
                __gmpz_clear(__sd_Z_sub_3);
              }
              __sd_forall_0 = __sd_or_0;
              __gmpz_add_ui(__q_k,__q_k,1);
              __sd_forall_cmp_0 = __gmpz_cmp(__q_k,__sd_Z_sub_1);
              __gmpz_clear(__sd_Z_lval_0);
              __gmpz_clear(__sd_Z_lval_1);
              __gmpz_clear(__sd_Z_cst_5);
              __gmpz_clear(__sd_Z_sub_2);
            }
            __gmpz_clear(__sd_Z_cst_3);
            __gmpz_clear(__sd_Z_to_Z_3);
            __gmpz_clear(__sd_Z_cst_4);
            __gmpz_clear(__sd_Z_sub_1);
            __gmpz_clear(__q_k);
          }
          if (! __sd_forall_0) pathcrawler_assume_exception("",0);
          __gmpz_clear(__sd_Z_cst_0);
          __gmpz_clear(__sd_Z_to_Z_1);
          __gmpz_clear(__sd_Z_cst_1);
          __gmpz_clear(__sd_Z_sub_0);
          __gmpz_clear(__sd_Z_cst_2);
          __gmpz_clear(__sd_Z_to_Z_2);
        }
        __gmpz_clear(__sd_Z_cst_7);
        __gmpz_clear(__sd_Z_to_Z_4);
        
      }
      if (i < n) {
        mpz_t __sd_Z_to_Z_8;
        mpz_t __sd_Z_to_Z_9;
        mpz_t __sd_Z_sub_10;
        int __sd_variant_pos_0;
        __gmpz_init_set_si(__sd_Z_to_Z_8,n);
        __gmpz_init_set_si(__sd_Z_to_Z_9,i);
        __gmpz_init(__sd_Z_sub_10);
        __gmpz_sub(__sd_Z_sub_10,__sd_Z_to_Z_8,__sd_Z_to_Z_9);
        __sd_variant_pos_0 = __gmpz_cmp_ui(__sd_Z_sub_10,0);
        if (__sd_variant_pos_0 < 0) pathcrawler_assert_exception("9$non positive",
                                                                 4);
        {
          *(t + i) = fmax(*(t + (i - 1)),*(t + (i - 2)));
          i ++;
        }mpz_t __sd_Z_cst_8;
        mpz_t __sd_Z_to_Z_5;
        int __sd_le_2;
        int __sd_and_2;
        int __sd_forall_2;
        mpz_t __sd_Z_to_Z_10;
        mpz_t __sd_Z_to_Z_11;
        mpz_t __sd_Z_sub_11;
        int __sd_variant_decr_0;
        __gmpz_init_set_str(__sd_Z_cst_8,"3",10);
        __gmpz_init_set_si(__sd_Z_to_Z_5,i);
        __sd_le_2 = __gmpz_cmp(__sd_Z_cst_8,__sd_Z_to_Z_5);
        __sd_and_2 = __sd_le_2 <= 0;
        if (__sd_and_2) __sd_and_2 = i <= n;
        if (! __sd_and_2) pathcrawler_assert_exception("9$not preserved",2);
        __sd_forall_2 = 1;
        {
          mpz_t __sd_Z_cst_13;
          mpz_t __sd_Z_to_Z_7;
          mpz_t __sd_Z_cst_14;
          mpz_t __sd_Z_sub_7;
          mpz_t __q_k;
          int __sd_forall_cmp_2;
          __gmpz_init_set_str(__sd_Z_cst_13,"2",10);
          __gmpz_init_set_si(__sd_Z_to_Z_7,i);
          __gmpz_init_set_str(__sd_Z_cst_14,"1",10);
          __gmpz_init(__sd_Z_sub_7);
          __gmpz_sub(__sd_Z_sub_7,__sd_Z_to_Z_7,__sd_Z_cst_14);
          __gmpz_init_set(__q_k,__sd_Z_cst_13);
          __sd_forall_cmp_2 = __gmpz_cmp(__q_k,__sd_Z_sub_7);
          while (__sd_forall_cmp_2 < 0 && __sd_forall_2) {
            mpz_t __sd_Z_lval_8;
            int __sd_to_ctype_11;
            mpz_t __sd_Z_lval_9;
            mpz_t __sd_Z_cst_15;
            mpz_t __sd_Z_sub_8;
            int __sd_to_ctype_12;
            int __sd_or_2;
            __gmpz_init_set(__sd_Z_lval_8,__q_k);
            __sd_to_ctype_11 = (int)__gmpz_get_si(__sd_Z_lval_8);
            __gmpz_init_set(__sd_Z_lval_9,__q_k);
            __gmpz_init_set_str(__sd_Z_cst_15,"1",10);
            __gmpz_init(__sd_Z_sub_8);
            __gmpz_sub(__sd_Z_sub_8,__sd_Z_lval_9,__sd_Z_cst_15);
            __sd_to_ctype_12 = (int)__gmpz_get_si(__sd_Z_sub_8);
            __sd_or_2 = *(t + __sd_to_ctype_11) == *(t + __sd_to_ctype_12);
            if (! __sd_or_2) {
              mpz_t __sd_Z_lval_10;
              int __sd_to_ctype_13;
              mpz_t __sd_Z_lval_11;
              mpz_t __sd_Z_cst_16;
              mpz_t __sd_Z_sub_9;
              int __sd_to_ctype_14;
              __gmpz_init_set(__sd_Z_lval_10,__q_k);
              __sd_to_ctype_13 = (int)__gmpz_get_si(__sd_Z_lval_10);
              __gmpz_init_set(__sd_Z_lval_11,__q_k);
              __gmpz_init_set_str(__sd_Z_cst_16,"2",10);
              __gmpz_init(__sd_Z_sub_9);
              __gmpz_sub(__sd_Z_sub_9,__sd_Z_lval_11,__sd_Z_cst_16);
              __sd_to_ctype_14 = (int)__gmpz_get_si(__sd_Z_sub_9);
              __sd_or_2 = *(t + __sd_to_ctype_13) == *(t + __sd_to_ctype_14);
              __gmpz_clear(__sd_Z_lval_10);
              __gmpz_clear(__sd_Z_lval_11);
              __gmpz_clear(__sd_Z_cst_16);
              __gmpz_clear(__sd_Z_sub_9);
            }
            __sd_forall_2 = __sd_or_2;
            __gmpz_add_ui(__q_k,__q_k,1);
            __sd_forall_cmp_2 = __gmpz_cmp(__q_k,__sd_Z_sub_7);
            __gmpz_clear(__sd_Z_lval_8);
            __gmpz_clear(__sd_Z_lval_9);
            __gmpz_clear(__sd_Z_cst_15);
            __gmpz_clear(__sd_Z_sub_8);
          }
          __gmpz_clear(__sd_Z_cst_13);
          __gmpz_clear(__sd_Z_to_Z_7);
          __gmpz_clear(__sd_Z_cst_14);
          __gmpz_clear(__sd_Z_sub_7);
          __gmpz_clear(__q_k);
        }
        if (! __sd_forall_2) pathcrawler_assert_exception("9$not preserved",
                                                          6);
        __gmpz_init_set_si(__sd_Z_to_Z_10,n);
        __gmpz_init_set_si(__sd_Z_to_Z_11,i);
        __gmpz_init(__sd_Z_sub_11);
        __gmpz_sub(__sd_Z_sub_11,__sd_Z_to_Z_10,__sd_Z_to_Z_11);
        __sd_variant_decr_0 = __gmpz_cmp(__sd_Z_sub_11,__sd_Z_sub_10);
        if (__sd_variant_decr_0 >= 0) pathcrawler_assert_exception("9$non decreasing",
                                                                   4);
        if (! 0) pathcrawler_assume_exception("",0);
        __gmpz_clear(__sd_Z_cst_8);
        __gmpz_clear(__sd_Z_to_Z_5);
        __gmpz_clear(__sd_Z_to_Z_10);
        __gmpz_clear(__sd_Z_to_Z_11);
        __gmpz_clear(__sd_Z_sub_11);
        __gmpz_clear(__sd_Z_to_Z_8);
        __gmpz_clear(__sd_Z_to_Z_9);
        __gmpz_clear(__sd_Z_sub_10);
        
      }
      
    free(old_ptr_t);
    return;
  }
}
[kernel] Parsing __sd_instru_inv_preserved_f.c (with preprocessing)
[kernel] Parsing __sd_instru_inv_preserved_f.c (with preprocessing)
[pc] Starting lanceur_f (isc version)
[pc] Starting lanceur_pathcrawler__f_precond (isc version)
[pc] Starting lanceur_f (isc version)
[stady] all-paths: true
[stady] 137 test cases
[stady] Subcontract Weakness
    of       : loop at label 'first_loop'
    location : tests/inv_preserved/inv_preserved.c:28
    for      : loop invariant
                 ∀ ℤ k;
                   2 ≤ k < i - 1 ⇒
                   *(t + k) ≡ *(t + (k - 1)) ∨ *(t + k) ≡ *(t + (k - 2)); (not preserved)
    location : tests/inv_preserved/inv_preserved.c:23
    TEST DRIVER: testcases___sd_instru_inv_preserved_f/f/testdrivers/TC_27.c
    n = 5
    nondet_sint_val[0] = 1073822706
    nondet_sint_val[1] = 0
    nondet_sint_val[2] = 4
    t[0] = 0
    t[1] = 0
    t[2] = 0 (in) ; 0 (concrete out) ; t[1] (symbolic out)
    t[3] = 0 (in) ; 1073822706 (concrete out) ; nondet_sint_val[0] (symbolic out)
    t[4] = 0 (in) ; 1073822706 (concrete out) ; nondet_sint_val[0] (symbolic out)
[report] Computing properties status...

--------------------------------------------------------------------------------
--- Properties of Function 'f'
--------------------------------------------------------------------------------

[ Partial ] Loop variant at loop (file tests/inv_preserved/inv_preserved.c, line 28)
            By StaDy, with pending:
             - Pre-condition (file tests/inv_preserved/inv_preserved.c, line 12)
[ Partial ] Invariant (file tests/inv_preserved/inv_preserved.c, line 22)
            By StaDy, with pending:
             - Pre-condition (file tests/inv_preserved/inv_preserved.c, line 12)
[ Partial ] Invariant (file tests/inv_preserved/inv_preserved.c, line 23)
            By StaDy, with pending:
             - Pre-condition (file tests/inv_preserved/inv_preserved.c, line 12)

--------------------------------------------------------------------------------
--- Status Report Summary
--------------------------------------------------------------------------------
     3 Locally validated
     3 Total
--------------------------------------------------------------------------------
