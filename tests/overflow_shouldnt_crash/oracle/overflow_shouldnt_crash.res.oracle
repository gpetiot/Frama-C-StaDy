[kernel] Parsing tests/overflow_shouldnt_crash/overflow_shouldnt_crash.c (with preprocessing)
[stady:generated-pl] generated Prolog precondition:
:- module(test_parameters).
:- import create_input_val/3 from substitution.
:- export dom/4.
:- export create_input_vals/2.
:- export unquantif_preconds/2.
:- export quantif_preconds/2.
:- export strategy/2.
:- export precondition_of/2.

dom(0,0,0,0).
dom('pathcrawler__f_precond',A,B,C) :-
  dom('f',A,B,C).
create_input_vals('f', Ins):-
  create_input_val('x', int([-2147483648..2147483647]),Ins),
  true.
create_input_vals('pathcrawler__f_precond',Ins) :-
  create_input_vals('f',Ins).
quantif_preconds('f',
  [

  ]
).
quantif_preconds('pathcrawler__f_precond',A) :-
  quantif_preconds('f',A).
unquantif_preconds('f',
  [

  ]
).
unquantif_preconds('pathcrawler__f_precond',A) :-
  unquantif_preconds('f',A).
strategy('f',[]).
strategy('pathcrawler__f_precond',A) :-
  strategy('f',A).
precondition_of('f','pathcrawler__f_precond').
[stady:generated-c] generated C file:
#include "/usr/local/share/frama-c/stady/externals.h"

int f_precond(int x) {
  return 1;
  
}
void f(int x)
{
  int old_x;
  old_x = x;
  {
    if (x > 0) 
      {
        mpz_t __sd_Z_to_Z_0;
        mpz_t __sd_Z_cst_0;
        mpz_t __sd_Z_add_0;
        mpz_t __sd_Z_cst_1;
        int __sd_gt_0;
        __gmpz_init_set_si(__sd_Z_to_Z_0,x);
        __gmpz_init_set_str(__sd_Z_cst_0,"1",10);
        __gmpz_init(__sd_Z_add_0);
        __gmpz_add(__sd_Z_add_0,__sd_Z_to_Z_0,__sd_Z_cst_0);
        __gmpz_init_set_str(__sd_Z_cst_1,"0",10);
        __sd_gt_0 = __gmpz_cmp(__sd_Z_add_0,__sd_Z_cst_1);
        if (! (__sd_gt_0 > 0)) pathcrawler_assert_exception("",0);
        __gmpz_clear(__sd_Z_to_Z_0);
        __gmpz_clear(__sd_Z_cst_0);
        __gmpz_clear(__sd_Z_add_0);
        __gmpz_clear(__sd_Z_cst_1);
        
      }
      ;
    return;
  }
}
[kernel] Parsing __sd_instru_overflow_shouldnt_crash_f.c (with preprocessing)
[kernel] Parsing __sd_instru_overflow_shouldnt_crash_f.c (with preprocessing)
[pc] Starting lanceur_f (isc version)
[pc] Starting lanceur_pathcrawler__f_precond (isc version)
[stady] all-paths: true
[stady] 3 test cases
[report] Computing properties status...

--------------------------------------------------------------------------------
--- Properties of Function 'f'
--------------------------------------------------------------------------------

[  Valid  ] Assertion (file tests/overflow_shouldnt_crash/overflow_shouldnt_crash.c, line 8)
            by StaDy.

--------------------------------------------------------------------------------
--- Status Report Summary
--------------------------------------------------------------------------------
     1 Completely validated
     1 Total
--------------------------------------------------------------------------------
