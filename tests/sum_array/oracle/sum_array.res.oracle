[kernel] Parsing tests/sum_array/sum_array.c (with preprocessing)
[rte] annotating function sum_array
tests/sum_array/sum_array.c:17:[stady] warning: \valid_read(t + i) is interpreted as \valid(t + i)
[stady:generated-c] generated C file:
#include "/usr/local/share/frama-c/stady/externals.h"

int sum_array_precond(int *t, int n) {
  return 1;
  
}
int sum_array(int *t, int n)
{
  int *old_t;
  int *old_ptr_t;
  mpz_t __sd_Z_to_Z_3;
  unsigned long __sd_to_ctype_1;
  unsigned long __sd_iter_0;
  int old_n;
  old_t = t;
  __gmpz_init_set_si(__sd_Z_to_Z_3,n);
  __sd_to_ctype_1 = __gmpz_get_ui(__sd_Z_to_Z_3);
  old_ptr_t = (int *)malloc(__sd_to_ctype_1 * (unsigned long)sizeof(int));
  __sd_iter_0 = 0;
  while (__sd_iter_0 < __sd_to_ctype_1) {
    *(old_ptr_t + __sd_iter_0) = *(t + __sd_iter_0);
    __sd_iter_0 ++;
  }
  old_n = n;
  __gmpz_clear(__sd_Z_to_Z_3);
  {
    int i;
    int s = 0;
    i = 0;
    {
      mpz_t __sd_Z_cst_5;
      mpz_t __sd_Z_to_Z_13;
      int __sd_le_3;
      int __sd_and_0;
      mpz_t __sd_Z_to_Z_15;
      mpz_t __sd_Z_sum_1;
      int __sd_eq_1;
      __gmpz_init_set_str(__sd_Z_cst_5,"0",10);
      __gmpz_init_set_si(__sd_Z_to_Z_13,i);
      __sd_le_3 = __gmpz_cmp(__sd_Z_cst_5,__sd_Z_to_Z_13);
      __sd_and_0 = __sd_le_3 <= 0;
      if (__sd_and_0) __sd_and_0 = i <= n;
      if (! __sd_and_0) pathcrawler_assert_exception("not established",0);
      __gmpz_init_set_si(__sd_Z_to_Z_15,s);
      __gmpz_init_set_si(__sd_Z_sum_1,0);
      {
        mpz_t __sd_Z_cst_7;
        mpz_t __sd_Z_to_Z_16;
        mpz_t __sd_Z_cst_8;
        mpz_t __sd_Z_sub_1;
        mpz_t k;
        int __sd_sum_cmp_1;
        __gmpz_init_set_str(__sd_Z_cst_7,"0",10);
        __gmpz_init_set_si(__sd_Z_to_Z_16,i);
        __gmpz_init_set_str(__sd_Z_cst_8,"1",10);
        __gmpz_init(__sd_Z_sub_1);
        __gmpz_sub(__sd_Z_sub_1,__sd_Z_to_Z_16,__sd_Z_cst_8);
        __gmpz_init_set(k,__sd_Z_cst_7);
        __sd_sum_cmp_1 = __gmpz_cmp(k,__sd_Z_sub_1);
        while (__sd_sum_cmp_1 <= 0) {
          mpz_t __sd_Z_lval_1;
          int __sd_to_ctype_5;
          mpz_t __sd_Z_to_Z_17;
          __gmpz_init_set(__sd_Z_lval_1,k);
          __sd_to_ctype_5 = (int)__gmpz_get_si(__sd_Z_lval_1);
          __gmpz_init_set_si(__sd_Z_to_Z_17,*(t + __sd_to_ctype_5));
          __gmpz_add_ui(k,k,1);
          __sd_sum_cmp_1 = __gmpz_cmp(k,__sd_Z_sub_1);
          __gmpz_add(__sd_Z_sum_1,__sd_Z_sum_1,__sd_Z_to_Z_17);
          __gmpz_clear(__sd_Z_lval_1);
          __gmpz_clear(__sd_Z_to_Z_17);
        }
        __gmpz_clear(__sd_Z_cst_7);
        __gmpz_clear(__sd_Z_to_Z_16);
        __gmpz_clear(__sd_Z_cst_8);
        __gmpz_clear(__sd_Z_sub_1);
        __gmpz_clear(k);
      }
      __sd_eq_1 = __gmpz_cmp(__sd_Z_to_Z_15,__sd_Z_sum_1);
      if (! (__sd_eq_1 == 0)) pathcrawler_assert_exception("not established",
                                                           8);
      __gmpz_clear(__sd_Z_cst_5);
      __gmpz_clear(__sd_Z_to_Z_13);
      __gmpz_clear(__sd_Z_to_Z_15);
      __gmpz_clear(__sd_Z_sum_1);
      
    }
    while (1) {
      
        if (! (i < n)) break;mpz_t __sd_Z_to_Z_21;
      mpz_t __sd_Z_to_Z_22;
      mpz_t __sd_Z_sub_3;
      int __sd_variant_pos_0;
      __gmpz_init_set_si(__sd_Z_to_Z_21,n);
      __gmpz_init_set_si(__sd_Z_to_Z_22,i);
      __gmpz_init(__sd_Z_sub_3);
      __gmpz_sub(__sd_Z_sub_3,__sd_Z_to_Z_21,__sd_Z_to_Z_22);
      __sd_variant_pos_0 = __gmpz_cmp_ui(__sd_Z_sub_3,0);
      if (__sd_variant_pos_0 < 0) pathcrawler_assert_exception("non positive",
                                                               4);
      {
        {
          mpz_t __sd_Z_to_Z_4;
          int __sd_to_ctype_2;
          int __sd_valid_0;
          int __sd_valid_dim_0;
          mpz_t __sd_Z_cst_2;
          mpz_t __sd_Z_to_Z_5;
          mpz_t __sd_Z_to_Z_6;
          int __sd_to_ctype_3;
          mpz_t __sd_Z_to_Z_7;
          mpz_t __sd_Z_add_0;
          int __sd_le_0;
          mpz_t __sd_Z_to_Z_8;
          mpz_t __sd_Z_to_Z_9;
          int __sd_to_ctype_4;
          mpz_t __sd_Z_to_Z_10;
          mpz_t __sd_Z_add_1;
          mpz_t __sd_Z_cst_3;
          int __sd_le_1;
          __gmpz_init_set_si(__sd_Z_to_Z_4,i);
          __sd_to_ctype_2 = (int)__gmpz_get_si(__sd_Z_to_Z_4);
          __sd_valid_dim_0 = pathcrawler_dimension(t);
          __sd_valid_0 = __sd_to_ctype_2 >= 0 && __sd_valid_dim_0 > __sd_to_ctype_2;
          if (! __sd_valid_0) pathcrawler_assert_exception("",3);
          __gmpz_init_set_str(__sd_Z_cst_2,"-2147483648",10);
          __gmpz_init_set_si(__sd_Z_to_Z_5,s);
          __gmpz_init_set_si(__sd_Z_to_Z_6,i);
          __sd_to_ctype_3 = (int)__gmpz_get_si(__sd_Z_to_Z_6);
          __gmpz_init_set_si(__sd_Z_to_Z_7,*(t + __sd_to_ctype_3));
          __gmpz_init(__sd_Z_add_0);
          __gmpz_add(__sd_Z_add_0,__sd_Z_to_Z_5,__sd_Z_to_Z_7);
          __sd_le_0 = __gmpz_cmp(__sd_Z_cst_2,__sd_Z_add_0);
          if (! (__sd_le_0 <= 0)) pathcrawler_assert_exception("",5);
          __gmpz_init_set_si(__sd_Z_to_Z_8,s);
          __gmpz_init_set_si(__sd_Z_to_Z_9,i);
          __sd_to_ctype_4 = (int)__gmpz_get_si(__sd_Z_to_Z_9);
          __gmpz_init_set_si(__sd_Z_to_Z_10,*(t + __sd_to_ctype_4));
          __gmpz_init(__sd_Z_add_1);
          __gmpz_add(__sd_Z_add_1,__sd_Z_to_Z_8,__sd_Z_to_Z_10);
          __gmpz_init_set_str(__sd_Z_cst_3,"2147483647",10);
          __sd_le_1 = __gmpz_cmp(__sd_Z_add_1,__sd_Z_cst_3);
          if (! (__sd_le_1 <= 0)) pathcrawler_assert_exception("",6);
          __gmpz_clear(__sd_Z_to_Z_4);
          __gmpz_clear(__sd_Z_cst_2);
          __gmpz_clear(__sd_Z_to_Z_5);
          __gmpz_clear(__sd_Z_to_Z_6);
          __gmpz_clear(__sd_Z_to_Z_7);
          __gmpz_clear(__sd_Z_add_0);
          __gmpz_clear(__sd_Z_to_Z_8);
          __gmpz_clear(__sd_Z_to_Z_9);
          __gmpz_clear(__sd_Z_to_Z_10);
          __gmpz_clear(__sd_Z_add_1);
          __gmpz_clear(__sd_Z_cst_3);
          
        }
        s += *(t + i);
        {
          mpz_t __sd_Z_to_Z_11;
          mpz_t __sd_Z_to_Z_12;
          mpz_t __sd_Z_add_2;
          mpz_t __sd_Z_cst_4;
          int __sd_le_2;
          __gmpz_init_set_si(__sd_Z_to_Z_11,i);
          __gmpz_init_set_si(__sd_Z_to_Z_12,1);
          __gmpz_init(__sd_Z_add_2);
          __gmpz_add(__sd_Z_add_2,__sd_Z_to_Z_11,__sd_Z_to_Z_12);
          __gmpz_init_set_str(__sd_Z_cst_4,"2147483647",10);
          __sd_le_2 = __gmpz_cmp(__sd_Z_add_2,__sd_Z_cst_4);
          if (! (__sd_le_2 <= 0)) pathcrawler_assert_exception("",2);
          __gmpz_clear(__sd_Z_to_Z_11);
          __gmpz_clear(__sd_Z_to_Z_12);
          __gmpz_clear(__sd_Z_add_2);
          __gmpz_clear(__sd_Z_cst_4);
          
        }
        i ++;
      }mpz_t __sd_Z_cst_6;
      mpz_t __sd_Z_to_Z_14;
      int __sd_le_4;
      int __sd_and_1;
      mpz_t __sd_Z_to_Z_18;
      mpz_t __sd_Z_sum_2;
      int __sd_eq_2;
      mpz_t __sd_Z_to_Z_23;
      mpz_t __sd_Z_to_Z_24;
      mpz_t __sd_Z_sub_4;
      int __sd_variant_decr_0;
      __gmpz_init_set_str(__sd_Z_cst_6,"0",10);
      __gmpz_init_set_si(__sd_Z_to_Z_14,i);
      __sd_le_4 = __gmpz_cmp(__sd_Z_cst_6,__sd_Z_to_Z_14);
      __sd_and_1 = __sd_le_4 <= 0;
      if (__sd_and_1) __sd_and_1 = i <= n;
      if (! __sd_and_1) pathcrawler_assert_exception("not preserved",0);
      __gmpz_init_set_si(__sd_Z_to_Z_18,s);
      __gmpz_init_set_si(__sd_Z_sum_2,0);
      {
        mpz_t __sd_Z_cst_9;
        mpz_t __sd_Z_to_Z_19;
        mpz_t __sd_Z_cst_10;
        mpz_t __sd_Z_sub_2;
        mpz_t k;
        int __sd_sum_cmp_2;
        __gmpz_init_set_str(__sd_Z_cst_9,"0",10);
        __gmpz_init_set_si(__sd_Z_to_Z_19,i);
        __gmpz_init_set_str(__sd_Z_cst_10,"1",10);
        __gmpz_init(__sd_Z_sub_2);
        __gmpz_sub(__sd_Z_sub_2,__sd_Z_to_Z_19,__sd_Z_cst_10);
        __gmpz_init_set(k,__sd_Z_cst_9);
        __sd_sum_cmp_2 = __gmpz_cmp(k,__sd_Z_sub_2);
        while (__sd_sum_cmp_2 <= 0) {
          mpz_t __sd_Z_lval_2;
          int __sd_to_ctype_6;
          mpz_t __sd_Z_to_Z_20;
          __gmpz_init_set(__sd_Z_lval_2,k);
          __sd_to_ctype_6 = (int)__gmpz_get_si(__sd_Z_lval_2);
          __gmpz_init_set_si(__sd_Z_to_Z_20,*(t + __sd_to_ctype_6));
          __gmpz_add_ui(k,k,1);
          __sd_sum_cmp_2 = __gmpz_cmp(k,__sd_Z_sub_2);
          __gmpz_add(__sd_Z_sum_2,__sd_Z_sum_2,__sd_Z_to_Z_20);
          __gmpz_clear(__sd_Z_lval_2);
          __gmpz_clear(__sd_Z_to_Z_20);
        }
        __gmpz_clear(__sd_Z_cst_9);
        __gmpz_clear(__sd_Z_to_Z_19);
        __gmpz_clear(__sd_Z_cst_10);
        __gmpz_clear(__sd_Z_sub_2);
        __gmpz_clear(k);
      }
      __sd_eq_2 = __gmpz_cmp(__sd_Z_to_Z_18,__sd_Z_sum_2);
      if (! (__sd_eq_2 == 0)) pathcrawler_assert_exception("not preserved",8);
      __gmpz_init_set_si(__sd_Z_to_Z_23,n);
      __gmpz_init_set_si(__sd_Z_to_Z_24,i);
      __gmpz_init(__sd_Z_sub_4);
      __gmpz_sub(__sd_Z_sub_4,__sd_Z_to_Z_23,__sd_Z_to_Z_24);
      __sd_variant_decr_0 = __gmpz_cmp(__sd_Z_sub_4,__sd_Z_sub_3);
      if (__sd_variant_decr_0 >= 0) pathcrawler_assert_exception("non decreasing",
                                                                 4);
      __gmpz_clear(__sd_Z_cst_6);
      __gmpz_clear(__sd_Z_to_Z_14);
      __gmpz_clear(__sd_Z_to_Z_18);
      __gmpz_clear(__sd_Z_sum_2);
      __gmpz_clear(__sd_Z_to_Z_23);
      __gmpz_clear(__sd_Z_to_Z_24);
      __gmpz_clear(__sd_Z_sub_4);
      __gmpz_clear(__sd_Z_to_Z_21);
      __gmpz_clear(__sd_Z_to_Z_22);
      __gmpz_clear(__sd_Z_sub_3);
      
    }
    
    {
      mpz_t __sd_Z_to_Z_0;
      mpz_t __sd_Z_sum_0;
      int __sd_eq_0;
      __gmpz_init_set_si(__sd_Z_to_Z_0,s);
      __gmpz_init_set_si(__sd_Z_sum_0,0);
      {
        mpz_t __sd_Z_cst_0;
        mpz_t __sd_Z_to_Z_1;
        mpz_t __sd_Z_cst_1;
        mpz_t __sd_Z_sub_0;
        mpz_t k;
        int __sd_sum_cmp_0;
        __gmpz_init_set_str(__sd_Z_cst_0,"0",10);
        __gmpz_init_set_si(__sd_Z_to_Z_1,old_n);
        __gmpz_init_set_str(__sd_Z_cst_1,"1",10);
        __gmpz_init(__sd_Z_sub_0);
        __gmpz_sub(__sd_Z_sub_0,__sd_Z_to_Z_1,__sd_Z_cst_1);
        __gmpz_init_set(k,__sd_Z_cst_0);
        __sd_sum_cmp_0 = __gmpz_cmp(k,__sd_Z_sub_0);
        while (__sd_sum_cmp_0 <= 0) {
          mpz_t __sd_Z_lval_0;
          int __sd_to_ctype_0;
          mpz_t __sd_Z_to_Z_2;
          __gmpz_init_set(__sd_Z_lval_0,k);
          __sd_to_ctype_0 = (int)__gmpz_get_si(__sd_Z_lval_0);
          __gmpz_init_set_si(__sd_Z_to_Z_2,*(old_t + __sd_to_ctype_0));
          __gmpz_add_ui(k,k,1);
          __sd_sum_cmp_0 = __gmpz_cmp(k,__sd_Z_sub_0);
          __gmpz_add(__sd_Z_sum_0,__sd_Z_sum_0,__sd_Z_to_Z_2);
          __gmpz_clear(__sd_Z_lval_0);
          __gmpz_clear(__sd_Z_to_Z_2);
        }
        __gmpz_clear(__sd_Z_cst_0);
        __gmpz_clear(__sd_Z_to_Z_1);
        __gmpz_clear(__sd_Z_cst_1);
        __gmpz_clear(__sd_Z_sub_0);
        __gmpz_clear(k);
      }
      __sd_eq_0 = __gmpz_cmp(__sd_Z_to_Z_0,__sd_Z_sum_0);
      if (! (__sd_eq_0 == 0)) pathcrawler_assert_exception("",9);
      __gmpz_clear(__sd_Z_to_Z_0);
      __gmpz_clear(__sd_Z_sum_0);
    }
    free(old_ptr_t);
    return s;
  }
}
[kernel] Parsing __sd_instru_sum_array_sum_array.c (with preprocessing)
[kernel] Parsing __sd_instru_sum_array_sum_array.c (with preprocessing)
[pc] Starting lanceur_sum_array (isc version)
[pc] Starting lanceur_pathcrawler__sum_array_precond (isc version)
[pc] Starting lanceur_sum_array (isc version)
[pc] Starting lanceur_sum_array (isc version)
[pc] Starting lanceur_sum_array (isc version)
[pc] Starting lanceur_sum_array (isc version)
[pc] Starting lanceur_sum_array (isc version)
[pc] Starting lanceur_sum_array (isc version)
[stady] all-paths: true
[stady] 147 test cases
[stady] Non-Compliance
    of       : assert rte: signed_overflow: -2147483648 ≤ s + *(t + i); 
    location : tests/sum_array/sum_array.c:17
    TEST DRIVER: testcases___sd_instru_sum_array_sum_array/sum_array/testdrivers/TC_10.c
    n = 3
    t[0] = -1955181277
    t[1] = -1051819753
    t[2] = 0
[stady] Non-Compliance
    of       : assert rte: signed_overflow: s + *(t + i) ≤ 2147483647; 
    location : tests/sum_array/sum_array.c:17
    TEST DRIVER: testcases___sd_instru_sum_array_sum_array/sum_array/testdrivers/TC_7.c
    n = 3
    t[0] = 0
    t[1] = 2078669042
    t[2] = 463116862
[report] Computing properties status...

--------------------------------------------------------------------------------
--- Properties of Function 'sum_array'
--------------------------------------------------------------------------------

[   Bug   ] Assertion 'rte,signed_overflow' (file tests/sum_array/sum_array.c, line 17)
            by StaDy.
[   Bug   ] Assertion 'rte,signed_overflow' (file tests/sum_array/sum_array.c, line 17)
            by StaDy.

--------------------------------------------------------------------------------
--- Status Report Summary
--------------------------------------------------------------------------------
     2 Bugs found
     2 Total
--------------------------------------------------------------------------------
